
'===============================================================================
'  Generated From - VbNet_SQL_dOOdads_View.vbgen
'
'  The supporting base class SqlClientEntity is in the 
'  Architecture directory in "dOOdads".
'===============================================================================

' Generated by MyGeneration Version # (1.3.0.3)

Imports System
Imports System.Data
Imports System.Data.SqlClient
Imports System.Collections
Imports System.Collections.Specialized

Imports MyGeneration.dOOdads

Public Class vs_Personal_Usuario_PersonNat
	Inherits  SqlClientEntity
	
		Public Sub New() 
			Me.QuerySource = "vs_Personal_Usuario_PersonNat"
			Me.MappingName = "vs_Personal_Usuario_PersonNat"
		End Sub

	'=================================================================
	'  	Public Function LoadAll() As Boolean
	'=================================================================
	'  Loads all of the records in the database, and sets the currentRow to the first row
	'=================================================================
	Public Function LoadAll() As Boolean
    	Return MyBase.Query.Load()
	End Function
	
	Public Overrides Sub FlushData()
		Me._whereClause = nothing
		Me._aggregateClause = nothing		
		MyBase.FlushData()
	End Sub	


#Region "Parameters"
    Protected Class Parameters

        Public Shared ReadOnly Property IdPersona() As SqlParameter
            Get
                Return New SqlParameter("IdPersona", SqlDbType.Char, 7)
            End Get
        End Property

        Public Shared ReadOnly Property FechaIng() As SqlParameter
            Get
                Return New SqlParameter("FechaIng", SqlDbType.DateTime, 0)
            End Get
        End Property

        Public Shared ReadOnly Property IdCargo() As SqlParameter
            Get
                Return New SqlParameter("IdCargo", SqlDbType.Char, 2)
            End Get
        End Property

        Public Shared ReadOnly Property IdArea() As SqlParameter
            Get
                Return New SqlParameter("IdArea", SqlDbType.Char, 2)
            End Get
        End Property

        Public Shared ReadOnly Property FechaSal() As SqlParameter
            Get
                Return New SqlParameter("FechaSal", SqlDbType.DateTime, 0)
            End Get
        End Property

        Public Shared ReadOnly Property IngMensual() As SqlParameter
            Get
                Return New SqlParameter("IngMensual", SqlDbType.Money, 0)
            End Get
        End Property

        Public Shared ReadOnly Property Idagencia() As SqlParameter
            Get
                Return New SqlParameter("Idagencia", SqlDbType.Char, 2)
            End Get
        End Property

        Public Shared ReadOnly Property IdEstPers() As SqlParameter
            Get
                Return New SqlParameter("IdEstPers", SqlDbType.Char, 4)
            End Get
        End Property

        Public Shared ReadOnly Property IdUser() As SqlParameter
            Get
                Return New SqlParameter("IdUser", SqlDbType.Char, 6)
            End Get
        End Property

        Public Shared ReadOnly Property FecPro() As SqlParameter
            Get
                Return New SqlParameter("FecPro", SqlDbType.DateTime, 0)
            End Get
        End Property

        Public Shared ReadOnly Property Hora() As SqlParameter
            Get
                Return New SqlParameter("Hora", SqlDbType.Char, 8)
            End Get
        End Property

        Public Shared ReadOnly Property IdEstPer() As SqlParameter
            Get
                Return New SqlParameter("IdEstPer", SqlDbType.Char, 2)
            End Get
        End Property

        Public Shared ReadOnly Property FormaMarcado() As SqlParameter
            Get
                Return New SqlParameter("FormaMarcado", SqlDbType.Char, 4)
            End Get
        End Property

        Public Shared ReadOnly Property ApePat() As SqlParameter
            Get
                Return New SqlParameter("ApePat", SqlDbType.VarChar, 35)
            End Get
        End Property

        Public Shared ReadOnly Property ApeMat() As SqlParameter
            Get
                Return New SqlParameter("ApeMat", SqlDbType.VarChar, 35)
            End Get
        End Property

        Public Shared ReadOnly Property Nombres() As SqlParameter
            Get
                Return New SqlParameter("Nombres", SqlDbType.VarChar, 40)
            End Get
        End Property

        Public Shared ReadOnly Property Sexo() As SqlParameter
            Get
                Return New SqlParameter("Sexo", SqlDbType.Char, 1)
            End Get
        End Property

        Public Shared ReadOnly Property IdTipDocId() As SqlParameter
            Get
                Return New SqlParameter("IdTipDocId", SqlDbType.Char, 4)
            End Get
        End Property

        Public Shared ReadOnly Property NroDocId() As SqlParameter
            Get
                Return New SqlParameter("NroDocId", SqlDbType.Char, 11)
            End Get
        End Property

        Public Shared ReadOnly Property IdEstCivil() As SqlParameter
            Get
                Return New SqlParameter("IdEstCivil", SqlDbType.Char, 4)
            End Get
        End Property

        Public Shared ReadOnly Property IdGradInst() As SqlParameter
            Get
                Return New SqlParameter("IdGradInst", SqlDbType.Char, 4)
            End Get
        End Property

        Public Shared ReadOnly Property IdProfesion() As SqlParameter
            Get
                Return New SqlParameter("IdProfesion", SqlDbType.Char, 4)
            End Get
        End Property

        Public Shared ReadOnly Property IdOcupacion() As SqlParameter
            Get
                Return New SqlParameter("IdOcupacion", SqlDbType.Char, 4)
            End Get
        End Property

        Public Shared ReadOnly Property NivelAdm() As SqlParameter
            Get
                Return New SqlParameter("NivelAdm", SqlDbType.Char, 1)
            End Get
        End Property

        Public Shared ReadOnly Property FecProR() As SqlParameter
            Get
                Return New SqlParameter("FecProR", SqlDbType.DateTime, 0)
            End Get
        End Property

        Public Shared ReadOnly Property Clave() As SqlParameter
            Get
                Return New SqlParameter("Clave", SqlDbType.VarChar, 142)
            End Get
        End Property

        Public Shared ReadOnly Property FechaIni() As SqlParameter
            Get
                Return New SqlParameter("FechaIni", SqlDbType.DateTime, 0)
            End Get
        End Property

        Public Shared ReadOnly Property FechaFin() As SqlParameter
            Get
                Return New SqlParameter("FechaFin", SqlDbType.DateTime, 0)
            End Get
        End Property

        Public Shared ReadOnly Property HoraR() As SqlParameter
            Get
                Return New SqlParameter("HoraR", SqlDbType.Char, 8)
            End Get
        End Property

        Public Shared ReadOnly Property IdUserR() As SqlParameter
            Get
                Return New SqlParameter("IdUserR", SqlDbType.VarChar, 6)
            End Get
        End Property

        Public Shared ReadOnly Property Activo() As SqlParameter
            Get
                Return New SqlParameter("Activo", SqlDbType.Char, 1)
            End Get
        End Property

        Public Shared ReadOnly Property Bloqueo() As SqlParameter
            Get
                Return New SqlParameter("Bloqueo", SqlDbType.Char, 1)
            End Get
        End Property

    End Class
#End Region

#Region "ColumnNames"
    Public Class ColumnNames

        Public Const IdPersona As String = "IdPersona"
        Public Const FechaIng As String = "FechaIng"
        Public Const IdCargo As String = "IdCargo"
        Public Const IdArea As String = "IdArea"
        Public Const FechaSal As String = "FechaSal"
        Public Const IngMensual As String = "IngMensual"
        Public Const Idagencia As String = "Idagencia"
        Public Const IdEstPers As String = "IdEstPers"
        Public Const IdUser As String = "IdUser"
        Public Const FecPro As String = "FecPro"
        Public Const Hora As String = "Hora"
        Public Const IdEstPer As String = "IdEstPer"
        Public Const FormaMarcado As String = "FormaMarcado"
        Public Const ApePat As String = "ApePat"
        Public Const ApeMat As String = "ApeMat"
        Public Const Nombres As String = "Nombres"
        Public Const Sexo As String = "Sexo"
        Public Const IdTipDocId As String = "IdTipDocId"
        Public Const NroDocId As String = "NroDocId"
        Public Const IdEstCivil As String = "IdEstCivil"
        Public Const IdGradInst As String = "IdGradInst"
        Public Const IdProfesion As String = "IdProfesion"
        Public Const IdOcupacion As String = "IdOcupacion"
        Public Const NivelAdm As String = "NivelAdm"
        Public Const FecProR As String = "FecProR"
        Public Const Clave As String = "Clave"
        Public Const FechaIni As String = "FechaIni"
        Public Const FechaFin As String = "FechaFin"
        Public Const HoraR As String = "HoraR"
        Public Const IdUserR As String = "IdUserR"
        Public Const Activo As String = "Activo"
        Public Const Bloqueo As String = "Bloqueo"

        Public Shared Function ToPropertyName(ByVal columnName As String) As String

            If ht Is Nothing Then

                ht = New Hashtable

                ht(IdPersona) = vs_Personal_Usuario_PersonNat.PropertyNames.IdPersona
                ht(FechaIng) = vs_Personal_Usuario_PersonNat.PropertyNames.FechaIng
                ht(IdCargo) = vs_Personal_Usuario_PersonNat.PropertyNames.IdCargo
                ht(IdArea) = vs_Personal_Usuario_PersonNat.PropertyNames.IdArea
                ht(FechaSal) = vs_Personal_Usuario_PersonNat.PropertyNames.FechaSal
                ht(IngMensual) = vs_Personal_Usuario_PersonNat.PropertyNames.IngMensual
                ht(Idagencia) = vs_Personal_Usuario_PersonNat.PropertyNames.Idagencia
                ht(IdEstPers) = vs_Personal_Usuario_PersonNat.PropertyNames.IdEstPers
                ht(IdUser) = vs_Personal_Usuario_PersonNat.PropertyNames.IdUser
                ht(FecPro) = vs_Personal_Usuario_PersonNat.PropertyNames.FecPro
                ht(Hora) = vs_Personal_Usuario_PersonNat.PropertyNames.Hora
                ht(IdEstPer) = vs_Personal_Usuario_PersonNat.PropertyNames.IdEstPer
                ht(FormaMarcado) = vs_Personal_Usuario_PersonNat.PropertyNames.FormaMarcado
                ht(ApePat) = vs_Personal_Usuario_PersonNat.PropertyNames.ApePat
                ht(ApeMat) = vs_Personal_Usuario_PersonNat.PropertyNames.ApeMat
                ht(Nombres) = vs_Personal_Usuario_PersonNat.PropertyNames.Nombres
                ht(Sexo) = vs_Personal_Usuario_PersonNat.PropertyNames.Sexo
                ht(IdTipDocId) = vs_Personal_Usuario_PersonNat.PropertyNames.IdTipDocId
                ht(NroDocId) = vs_Personal_Usuario_PersonNat.PropertyNames.NroDocId
                ht(IdEstCivil) = vs_Personal_Usuario_PersonNat.PropertyNames.IdEstCivil
                ht(IdGradInst) = vs_Personal_Usuario_PersonNat.PropertyNames.IdGradInst
                ht(IdProfesion) = vs_Personal_Usuario_PersonNat.PropertyNames.IdProfesion
                ht(IdOcupacion) = vs_Personal_Usuario_PersonNat.PropertyNames.IdOcupacion
                ht(NivelAdm) = vs_Personal_Usuario_PersonNat.PropertyNames.NivelAdm
                ht(FecProR) = vs_Personal_Usuario_PersonNat.PropertyNames.FecProR
                ht(Clave) = vs_Personal_Usuario_PersonNat.PropertyNames.Clave
                ht(FechaIni) = vs_Personal_Usuario_PersonNat.PropertyNames.FechaIni
                ht(FechaFin) = vs_Personal_Usuario_PersonNat.PropertyNames.FechaFin
                ht(HoraR) = vs_Personal_Usuario_PersonNat.PropertyNames.HoraR
                ht(IdUserR) = vs_Personal_Usuario_PersonNat.PropertyNames.IdUserR
                ht(Activo) = vs_Personal_Usuario_PersonNat.PropertyNames.Activo
                ht(Bloqueo) = vs_Personal_Usuario_PersonNat.PropertyNames.Bloqueo

            End If

            Return CType(ht(columnName), String)

        End Function

        Private Shared ht As Hashtable = Nothing
    End Class
#End Region

#Region "PropertyNames"
    Public Class PropertyNames

        Public Const IdPersona As String = "IdPersona"
        Public Const FechaIng As String = "FechaIng"
        Public Const IdCargo As String = "IdCargo"
        Public Const IdArea As String = "IdArea"
        Public Const FechaSal As String = "FechaSal"
        Public Const IngMensual As String = "IngMensual"
        Public Const Idagencia As String = "Idagencia"
        Public Const IdEstPers As String = "IdEstPers"
        Public Const IdUser As String = "IdUser"
        Public Const FecPro As String = "FecPro"
        Public Const Hora As String = "Hora"
        Public Const IdEstPer As String = "IdEstPer"
        Public Const FormaMarcado As String = "FormaMarcado"
        Public Const ApePat As String = "ApePat"
        Public Const ApeMat As String = "ApeMat"
        Public Const Nombres As String = "Nombres"
        Public Const Sexo As String = "Sexo"
        Public Const IdTipDocId As String = "IdTipDocId"
        Public Const NroDocId As String = "NroDocId"
        Public Const IdEstCivil As String = "IdEstCivil"
        Public Const IdGradInst As String = "IdGradInst"
        Public Const IdProfesion As String = "IdProfesion"
        Public Const IdOcupacion As String = "IdOcupacion"
        Public Const NivelAdm As String = "NivelAdm"
        Public Const FecProR As String = "FecProR"
        Public Const Clave As String = "Clave"
        Public Const FechaIni As String = "FechaIni"
        Public Const FechaFin As String = "FechaFin"
        Public Const HoraR As String = "HoraR"
        Public Const IdUserR As String = "IdUserR"
        Public Const Activo As String = "Activo"
        Public Const Bloqueo As String = "Bloqueo"

        Public Shared Function ToColumnName(ByVal propertyName As String) As String

            If ht Is Nothing Then

                ht = New Hashtable

                ht(IdPersona) = vs_Personal_Usuario_PersonNat.ColumnNames.IdPersona
                ht(FechaIng) = vs_Personal_Usuario_PersonNat.ColumnNames.FechaIng
                ht(IdCargo) = vs_Personal_Usuario_PersonNat.ColumnNames.IdCargo
                ht(IdArea) = vs_Personal_Usuario_PersonNat.ColumnNames.IdArea
                ht(FechaSal) = vs_Personal_Usuario_PersonNat.ColumnNames.FechaSal
                ht(IngMensual) = vs_Personal_Usuario_PersonNat.ColumnNames.IngMensual
                ht(Idagencia) = vs_Personal_Usuario_PersonNat.ColumnNames.Idagencia
                ht(IdEstPers) = vs_Personal_Usuario_PersonNat.ColumnNames.IdEstPers
                ht(IdUser) = vs_Personal_Usuario_PersonNat.ColumnNames.IdUser
                ht(FecPro) = vs_Personal_Usuario_PersonNat.ColumnNames.FecPro
                ht(Hora) = vs_Personal_Usuario_PersonNat.ColumnNames.Hora
                ht(IdEstPer) = vs_Personal_Usuario_PersonNat.ColumnNames.IdEstPer
                ht(FormaMarcado) = vs_Personal_Usuario_PersonNat.ColumnNames.FormaMarcado
                ht(ApePat) = vs_Personal_Usuario_PersonNat.ColumnNames.ApePat
                ht(ApeMat) = vs_Personal_Usuario_PersonNat.ColumnNames.ApeMat
                ht(Nombres) = vs_Personal_Usuario_PersonNat.ColumnNames.Nombres
                ht(Sexo) = vs_Personal_Usuario_PersonNat.ColumnNames.Sexo
                ht(IdTipDocId) = vs_Personal_Usuario_PersonNat.ColumnNames.IdTipDocId
                ht(NroDocId) = vs_Personal_Usuario_PersonNat.ColumnNames.NroDocId
                ht(IdEstCivil) = vs_Personal_Usuario_PersonNat.ColumnNames.IdEstCivil
                ht(IdGradInst) = vs_Personal_Usuario_PersonNat.ColumnNames.IdGradInst
                ht(IdProfesion) = vs_Personal_Usuario_PersonNat.ColumnNames.IdProfesion
                ht(IdOcupacion) = vs_Personal_Usuario_PersonNat.ColumnNames.IdOcupacion
                ht(NivelAdm) = vs_Personal_Usuario_PersonNat.ColumnNames.NivelAdm
                ht(FecProR) = vs_Personal_Usuario_PersonNat.ColumnNames.FecProR
                ht(Clave) = vs_Personal_Usuario_PersonNat.ColumnNames.Clave
                ht(FechaIni) = vs_Personal_Usuario_PersonNat.ColumnNames.FechaIni
                ht(FechaFin) = vs_Personal_Usuario_PersonNat.ColumnNames.FechaFin
                ht(HoraR) = vs_Personal_Usuario_PersonNat.ColumnNames.HoraR
                ht(IdUserR) = vs_Personal_Usuario_PersonNat.ColumnNames.IdUserR
                ht(Activo) = vs_Personal_Usuario_PersonNat.ColumnNames.Activo
                ht(Bloqueo) = vs_Personal_Usuario_PersonNat.ColumnNames.Bloqueo

            End If

            Return CType(ht(propertyName), String)

        End Function

        Private Shared ht As Hashtable = Nothing

    End Class
#End Region

#Region "StringPropertyNames"
    Public Class StringPropertyNames

        Public Const IdPersona As String = "s_IdPersona"
        Public Const FechaIng As String = "s_FechaIng"
        Public Const IdCargo As String = "s_IdCargo"
        Public Const IdArea As String = "s_IdArea"
        Public Const FechaSal As String = "s_FechaSal"
        Public Const IngMensual As String = "s_IngMensual"
        Public Const Idagencia As String = "s_Idagencia"
        Public Const IdEstPers As String = "s_IdEstPers"
        Public Const IdUser As String = "s_IdUser"
        Public Const FecPro As String = "s_FecPro"
        Public Const Hora As String = "s_Hora"
        Public Const IdEstPer As String = "s_IdEstPer"
        Public Const FormaMarcado As String = "s_FormaMarcado"
        Public Const ApePat As String = "s_ApePat"
        Public Const ApeMat As String = "s_ApeMat"
        Public Const Nombres As String = "s_Nombres"
        Public Const Sexo As String = "s_Sexo"
        Public Const IdTipDocId As String = "s_IdTipDocId"
        Public Const NroDocId As String = "s_NroDocId"
        Public Const IdEstCivil As String = "s_IdEstCivil"
        Public Const IdGradInst As String = "s_IdGradInst"
        Public Const IdProfesion As String = "s_IdProfesion"
        Public Const IdOcupacion As String = "s_IdOcupacion"
        Public Const NivelAdm As String = "s_NivelAdm"
        Public Const FecProR As String = "s_FecProR"
        Public Const Clave As String = "s_Clave"
        Public Const FechaIni As String = "s_FechaIni"
        Public Const FechaFin As String = "s_FechaFin"
        Public Const HoraR As String = "s_HoraR"
        Public Const IdUserR As String = "s_IdUserR"
        Public Const Activo As String = "s_Activo"
        Public Const Bloqueo As String = "s_Bloqueo"

    End Class
#End Region

#Region "Properties"
    Public Overridable Property IdPersona() As String
        Get
            Return MyBase.GetString(ColumnNames.IdPersona)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.IdPersona, Value)
        End Set
    End Property

    Public Overridable Property FechaIng() As DateTime
        Get
            Return MyBase.GetDateTime(ColumnNames.FechaIng)
        End Get
        Set(ByVal Value As DateTime)
            MyBase.SetDateTime(ColumnNames.FechaIng, Value)
        End Set
    End Property

    Public Overridable Property IdCargo() As String
        Get
            Return MyBase.GetString(ColumnNames.IdCargo)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.IdCargo, Value)
        End Set
    End Property

    Public Overridable Property IdArea() As String
        Get
            Return MyBase.GetString(ColumnNames.IdArea)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.IdArea, Value)
        End Set
    End Property

    Public Overridable Property FechaSal() As DateTime
        Get
            Return MyBase.GetDateTime(ColumnNames.FechaSal)
        End Get
        Set(ByVal Value As DateTime)
            MyBase.SetDateTime(ColumnNames.FechaSal, Value)
        End Set
    End Property

    Public Overridable Property IngMensual() As Decimal
        Get
            Return MyBase.GetDecimal(ColumnNames.IngMensual)
        End Get
        Set(ByVal Value As Decimal)
            MyBase.SetDecimal(ColumnNames.IngMensual, Value)
        End Set
    End Property

    Public Overridable Property Idagencia() As String
        Get
            Return MyBase.GetString(ColumnNames.Idagencia)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.Idagencia, Value)
        End Set
    End Property

    Public Overridable Property IdEstPers() As String
        Get
            Return MyBase.GetString(ColumnNames.IdEstPers)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.IdEstPers, Value)
        End Set
    End Property

    Public Overridable Property IdUser() As String
        Get
            Return MyBase.GetString(ColumnNames.IdUser)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.IdUser, Value)
        End Set
    End Property

    Public Overridable Property FecPro() As DateTime
        Get
            Return MyBase.GetDateTime(ColumnNames.FecPro)
        End Get
        Set(ByVal Value As DateTime)
            MyBase.SetDateTime(ColumnNames.FecPro, Value)
        End Set
    End Property

    Public Overridable Property Hora() As String
        Get
            Return MyBase.GetString(ColumnNames.Hora)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.Hora, Value)
        End Set
    End Property

    Public Overridable Property IdEstPer() As String
        Get
            Return MyBase.GetString(ColumnNames.IdEstPer)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.IdEstPer, Value)
        End Set
    End Property

    Public Overridable Property FormaMarcado() As String
        Get
            Return MyBase.GetString(ColumnNames.FormaMarcado)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.FormaMarcado, Value)
        End Set
    End Property

    Public Overridable Property ApePat() As String
        Get
            Return MyBase.GetString(ColumnNames.ApePat)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.ApePat, Value)
        End Set
    End Property

    Public Overridable Property ApeMat() As String
        Get
            Return MyBase.GetString(ColumnNames.ApeMat)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.ApeMat, Value)
        End Set
    End Property

    Public Overridable Property Nombres() As String
        Get
            Return MyBase.GetString(ColumnNames.Nombres)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.Nombres, Value)
        End Set
    End Property

    Public Overridable Property Sexo() As String
        Get
            Return MyBase.GetString(ColumnNames.Sexo)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.Sexo, Value)
        End Set
    End Property

    Public Overridable Property IdTipDocId() As String
        Get
            Return MyBase.GetString(ColumnNames.IdTipDocId)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.IdTipDocId, Value)
        End Set
    End Property

    Public Overridable Property NroDocId() As String
        Get
            Return MyBase.GetString(ColumnNames.NroDocId)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.NroDocId, Value)
        End Set
    End Property

    Public Overridable Property IdEstCivil() As String
        Get
            Return MyBase.GetString(ColumnNames.IdEstCivil)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.IdEstCivil, Value)
        End Set
    End Property

    Public Overridable Property IdGradInst() As String
        Get
            Return MyBase.GetString(ColumnNames.IdGradInst)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.IdGradInst, Value)
        End Set
    End Property

    Public Overridable Property IdProfesion() As String
        Get
            Return MyBase.GetString(ColumnNames.IdProfesion)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.IdProfesion, Value)
        End Set
    End Property

    Public Overridable Property IdOcupacion() As String
        Get
            Return MyBase.GetString(ColumnNames.IdOcupacion)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.IdOcupacion, Value)
        End Set
    End Property

    Public Overridable Property NivelAdm() As String
        Get
            Return MyBase.GetString(ColumnNames.NivelAdm)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.NivelAdm, Value)
        End Set
    End Property

    Public Overridable Property FecProR() As DateTime
        Get
            Return MyBase.GetDateTime(ColumnNames.FecProR)
        End Get
        Set(ByVal Value As DateTime)
            MyBase.SetDateTime(ColumnNames.FecProR, Value)
        End Set
    End Property

    Public Overridable Property Clave() As String
        Get
            Return MyBase.GetString(ColumnNames.Clave)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.Clave, Value)
        End Set
    End Property

    Public Overridable Property FechaIni() As DateTime
        Get
            Return MyBase.GetDateTime(ColumnNames.FechaIni)
        End Get
        Set(ByVal Value As DateTime)
            MyBase.SetDateTime(ColumnNames.FechaIni, Value)
        End Set
    End Property

    Public Overridable Property FechaFin() As DateTime
        Get
            Return MyBase.GetDateTime(ColumnNames.FechaFin)
        End Get
        Set(ByVal Value As DateTime)
            MyBase.SetDateTime(ColumnNames.FechaFin, Value)
        End Set
    End Property

    Public Overridable Property HoraR() As String
        Get
            Return MyBase.GetString(ColumnNames.HoraR)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.HoraR, Value)
        End Set
    End Property

    Public Overridable Property IdUserR() As String
        Get
            Return MyBase.GetString(ColumnNames.IdUserR)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.IdUserR, Value)
        End Set
    End Property

    Public Overridable Property Activo() As String
        Get
            Return MyBase.GetString(ColumnNames.Activo)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.Activo, Value)
        End Set
    End Property

    Public Overridable Property Bloqueo() As String
        Get
            Return MyBase.GetString(ColumnNames.Bloqueo)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.Bloqueo, Value)
        End Set
    End Property


#End Region

#Region "String Properties"

    Public Overridable Property s_IdPersona() As String
        Get
            If Me.IsColumnNull(ColumnNames.IdPersona) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.IdPersona)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.IdPersona)
            Else
                Me.IdPersona = MyBase.SetStringAsString(ColumnNames.IdPersona, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_FechaIng() As String
        Get
            If Me.IsColumnNull(ColumnNames.FechaIng) Then
                Return String.Empty
            Else
                Return MyBase.GetDateTimeAsString(ColumnNames.FechaIng)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.FechaIng)
            Else
                Me.FechaIng = MyBase.SetDateTimeAsString(ColumnNames.FechaIng, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_IdCargo() As String
        Get
            If Me.IsColumnNull(ColumnNames.IdCargo) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.IdCargo)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.IdCargo)
            Else
                Me.IdCargo = MyBase.SetStringAsString(ColumnNames.IdCargo, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_IdArea() As String
        Get
            If Me.IsColumnNull(ColumnNames.IdArea) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.IdArea)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.IdArea)
            Else
                Me.IdArea = MyBase.SetStringAsString(ColumnNames.IdArea, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_FechaSal() As String
        Get
            If Me.IsColumnNull(ColumnNames.FechaSal) Then
                Return String.Empty
            Else
                Return MyBase.GetDateTimeAsString(ColumnNames.FechaSal)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.FechaSal)
            Else
                Me.FechaSal = MyBase.SetDateTimeAsString(ColumnNames.FechaSal, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_IngMensual() As String
        Get
            If Me.IsColumnNull(ColumnNames.IngMensual) Then
                Return String.Empty
            Else
                Return MyBase.GetDecimalAsString(ColumnNames.IngMensual)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.IngMensual)
            Else
                Me.IngMensual = MyBase.SetDecimalAsString(ColumnNames.IngMensual, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_Idagencia() As String
        Get
            If Me.IsColumnNull(ColumnNames.Idagencia) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.Idagencia)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.Idagencia)
            Else
                Me.Idagencia = MyBase.SetStringAsString(ColumnNames.Idagencia, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_IdEstPers() As String
        Get
            If Me.IsColumnNull(ColumnNames.IdEstPers) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.IdEstPers)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.IdEstPers)
            Else
                Me.IdEstPers = MyBase.SetStringAsString(ColumnNames.IdEstPers, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_IdUser() As String
        Get
            If Me.IsColumnNull(ColumnNames.IdUser) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.IdUser)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.IdUser)
            Else
                Me.IdUser = MyBase.SetStringAsString(ColumnNames.IdUser, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_FecPro() As String
        Get
            If Me.IsColumnNull(ColumnNames.FecPro) Then
                Return String.Empty
            Else
                Return MyBase.GetDateTimeAsString(ColumnNames.FecPro)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.FecPro)
            Else
                Me.FecPro = MyBase.SetDateTimeAsString(ColumnNames.FecPro, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_Hora() As String
        Get
            If Me.IsColumnNull(ColumnNames.Hora) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.Hora)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.Hora)
            Else
                Me.Hora = MyBase.SetStringAsString(ColumnNames.Hora, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_IdEstPer() As String
        Get
            If Me.IsColumnNull(ColumnNames.IdEstPer) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.IdEstPer)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.IdEstPer)
            Else
                Me.IdEstPer = MyBase.SetStringAsString(ColumnNames.IdEstPer, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_FormaMarcado() As String
        Get
            If Me.IsColumnNull(ColumnNames.FormaMarcado) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.FormaMarcado)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.FormaMarcado)
            Else
                Me.FormaMarcado = MyBase.SetStringAsString(ColumnNames.FormaMarcado, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_ApePat() As String
        Get
            If Me.IsColumnNull(ColumnNames.ApePat) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.ApePat)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.ApePat)
            Else
                Me.ApePat = MyBase.SetStringAsString(ColumnNames.ApePat, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_ApeMat() As String
        Get
            If Me.IsColumnNull(ColumnNames.ApeMat) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.ApeMat)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.ApeMat)
            Else
                Me.ApeMat = MyBase.SetStringAsString(ColumnNames.ApeMat, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_Nombres() As String
        Get
            If Me.IsColumnNull(ColumnNames.Nombres) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.Nombres)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.Nombres)
            Else
                Me.Nombres = MyBase.SetStringAsString(ColumnNames.Nombres, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_Sexo() As String
        Get
            If Me.IsColumnNull(ColumnNames.Sexo) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.Sexo)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.Sexo)
            Else
                Me.Sexo = MyBase.SetStringAsString(ColumnNames.Sexo, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_IdTipDocId() As String
        Get
            If Me.IsColumnNull(ColumnNames.IdTipDocId) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.IdTipDocId)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.IdTipDocId)
            Else
                Me.IdTipDocId = MyBase.SetStringAsString(ColumnNames.IdTipDocId, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_NroDocId() As String
        Get
            If Me.IsColumnNull(ColumnNames.NroDocId) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.NroDocId)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.NroDocId)
            Else
                Me.NroDocId = MyBase.SetStringAsString(ColumnNames.NroDocId, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_IdEstCivil() As String
        Get
            If Me.IsColumnNull(ColumnNames.IdEstCivil) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.IdEstCivil)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.IdEstCivil)
            Else
                Me.IdEstCivil = MyBase.SetStringAsString(ColumnNames.IdEstCivil, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_IdGradInst() As String
        Get
            If Me.IsColumnNull(ColumnNames.IdGradInst) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.IdGradInst)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.IdGradInst)
            Else
                Me.IdGradInst = MyBase.SetStringAsString(ColumnNames.IdGradInst, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_IdProfesion() As String
        Get
            If Me.IsColumnNull(ColumnNames.IdProfesion) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.IdProfesion)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.IdProfesion)
            Else
                Me.IdProfesion = MyBase.SetStringAsString(ColumnNames.IdProfesion, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_IdOcupacion() As String
        Get
            If Me.IsColumnNull(ColumnNames.IdOcupacion) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.IdOcupacion)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.IdOcupacion)
            Else
                Me.IdOcupacion = MyBase.SetStringAsString(ColumnNames.IdOcupacion, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_NivelAdm() As String
        Get
            If Me.IsColumnNull(ColumnNames.NivelAdm) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.NivelAdm)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.NivelAdm)
            Else
                Me.NivelAdm = MyBase.SetStringAsString(ColumnNames.NivelAdm, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_FecProR() As String
        Get
            If Me.IsColumnNull(ColumnNames.FecProR) Then
                Return String.Empty
            Else
                Return MyBase.GetDateTimeAsString(ColumnNames.FecProR)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.FecProR)
            Else
                Me.FecProR = MyBase.SetDateTimeAsString(ColumnNames.FecProR, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_Clave() As String
        Get
            If Me.IsColumnNull(ColumnNames.Clave) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.Clave)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.Clave)
            Else
                Me.Clave = MyBase.SetStringAsString(ColumnNames.Clave, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_FechaIni() As String
        Get
            If Me.IsColumnNull(ColumnNames.FechaIni) Then
                Return String.Empty
            Else
                Return MyBase.GetDateTimeAsString(ColumnNames.FechaIni)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.FechaIni)
            Else
                Me.FechaIni = MyBase.SetDateTimeAsString(ColumnNames.FechaIni, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_FechaFin() As String
        Get
            If Me.IsColumnNull(ColumnNames.FechaFin) Then
                Return String.Empty
            Else
                Return MyBase.GetDateTimeAsString(ColumnNames.FechaFin)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.FechaFin)
            Else
                Me.FechaFin = MyBase.SetDateTimeAsString(ColumnNames.FechaFin, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_HoraR() As String
        Get
            If Me.IsColumnNull(ColumnNames.HoraR) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.HoraR)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.HoraR)
            Else
                Me.HoraR = MyBase.SetStringAsString(ColumnNames.HoraR, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_IdUserR() As String
        Get
            If Me.IsColumnNull(ColumnNames.IdUserR) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.IdUserR)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.IdUserR)
            Else
                Me.IdUserR = MyBase.SetStringAsString(ColumnNames.IdUserR, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_Activo() As String
        Get
            If Me.IsColumnNull(ColumnNames.Activo) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.Activo)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.Activo)
            Else
                Me.Activo = MyBase.SetStringAsString(ColumnNames.Activo, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_Bloqueo() As String
        Get
            If Me.IsColumnNull(ColumnNames.Bloqueo) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.Bloqueo)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.Bloqueo)
            Else
                Me.Bloqueo = MyBase.SetStringAsString(ColumnNames.Bloqueo, Value)
            End If
        End Set
    End Property


#End Region

#Region "Where Clause"
    Public Class WhereClause

        Public Sub New(ByVal entity As BusinessEntity)
            Me._entity = entity
        End Sub

        Public ReadOnly Property TearOff() As TearOffWhereParameter
            Get
                If _tearOff Is Nothing Then
                    _tearOff = New TearOffWhereParameter(Me)
                End If

                Return _tearOff
            End Get
        End Property

#Region "TearOff's"
        Public Class TearOffWhereParameter

            Public Sub New(ByVal clause As WhereClause)
                Me._clause = clause
            End Sub


            Public ReadOnly Property IdPersona() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.IdPersona, Parameters.IdPersona)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property FechaIng() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.FechaIng, Parameters.FechaIng)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property IdCargo() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.IdCargo, Parameters.IdCargo)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property IdArea() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.IdArea, Parameters.IdArea)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property FechaSal() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.FechaSal, Parameters.FechaSal)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property IngMensual() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.IngMensual, Parameters.IngMensual)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property Idagencia() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.Idagencia, Parameters.Idagencia)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property IdEstPers() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.IdEstPers, Parameters.IdEstPers)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property IdUser() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.IdUser, Parameters.IdUser)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property FecPro() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.FecPro, Parameters.FecPro)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property Hora() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.Hora, Parameters.Hora)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property IdEstPer() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.IdEstPer, Parameters.IdEstPer)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property FormaMarcado() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.FormaMarcado, Parameters.FormaMarcado)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property ApePat() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.ApePat, Parameters.ApePat)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property ApeMat() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.ApeMat, Parameters.ApeMat)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property Nombres() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.Nombres, Parameters.Nombres)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property Sexo() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.Sexo, Parameters.Sexo)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property IdTipDocId() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.IdTipDocId, Parameters.IdTipDocId)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property NroDocId() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.NroDocId, Parameters.NroDocId)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property IdEstCivil() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.IdEstCivil, Parameters.IdEstCivil)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property IdGradInst() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.IdGradInst, Parameters.IdGradInst)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property IdProfesion() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.IdProfesion, Parameters.IdProfesion)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property IdOcupacion() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.IdOcupacion, Parameters.IdOcupacion)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property NivelAdm() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.NivelAdm, Parameters.NivelAdm)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property FecProR() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.FecProR, Parameters.FecProR)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property Clave() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.Clave, Parameters.Clave)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property FechaIni() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.FechaIni, Parameters.FechaIni)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property FechaFin() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.FechaFin, Parameters.FechaFin)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property HoraR() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.HoraR, Parameters.HoraR)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property IdUserR() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.IdUserR, Parameters.IdUserR)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property Activo() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.Activo, Parameters.Activo)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property Bloqueo() As WhereParameter
                Get
                    Dim where As WhereParameter = New WhereParameter(ColumnNames.Bloqueo, Parameters.Bloqueo)
                    Me._clause._entity.Query.AddWhereParemeter(where)
                    Return where
                End Get
            End Property


            Private _clause As WhereClause
        End Class
#End Region

        Public ReadOnly Property IdPersona() As WhereParameter
            Get
                If _IdPersona_W Is Nothing Then
                    _IdPersona_W = TearOff.IdPersona
                End If
                Return _IdPersona_W
            End Get
        End Property

        Public ReadOnly Property FechaIng() As WhereParameter
            Get
                If _FechaIng_W Is Nothing Then
                    _FechaIng_W = TearOff.FechaIng
                End If
                Return _FechaIng_W
            End Get
        End Property

        Public ReadOnly Property IdCargo() As WhereParameter
            Get
                If _IdCargo_W Is Nothing Then
                    _IdCargo_W = TearOff.IdCargo
                End If
                Return _IdCargo_W
            End Get
        End Property

        Public ReadOnly Property IdArea() As WhereParameter
            Get
                If _IdArea_W Is Nothing Then
                    _IdArea_W = TearOff.IdArea
                End If
                Return _IdArea_W
            End Get
        End Property

        Public ReadOnly Property FechaSal() As WhereParameter
            Get
                If _FechaSal_W Is Nothing Then
                    _FechaSal_W = TearOff.FechaSal
                End If
                Return _FechaSal_W
            End Get
        End Property

        Public ReadOnly Property IngMensual() As WhereParameter
            Get
                If _IngMensual_W Is Nothing Then
                    _IngMensual_W = TearOff.IngMensual
                End If
                Return _IngMensual_W
            End Get
        End Property

        Public ReadOnly Property Idagencia() As WhereParameter
            Get
                If _Idagencia_W Is Nothing Then
                    _Idagencia_W = TearOff.Idagencia
                End If
                Return _Idagencia_W
            End Get
        End Property

        Public ReadOnly Property IdEstPers() As WhereParameter
            Get
                If _IdEstPers_W Is Nothing Then
                    _IdEstPers_W = TearOff.IdEstPers
                End If
                Return _IdEstPers_W
            End Get
        End Property

        Public ReadOnly Property IdUser() As WhereParameter
            Get
                If _IdUser_W Is Nothing Then
                    _IdUser_W = TearOff.IdUser
                End If
                Return _IdUser_W
            End Get
        End Property

        Public ReadOnly Property FecPro() As WhereParameter
            Get
                If _FecPro_W Is Nothing Then
                    _FecPro_W = TearOff.FecPro
                End If
                Return _FecPro_W
            End Get
        End Property

        Public ReadOnly Property Hora() As WhereParameter
            Get
                If _Hora_W Is Nothing Then
                    _Hora_W = TearOff.Hora
                End If
                Return _Hora_W
            End Get
        End Property

        Public ReadOnly Property IdEstPer() As WhereParameter
            Get
                If _IdEstPer_W Is Nothing Then
                    _IdEstPer_W = TearOff.IdEstPer
                End If
                Return _IdEstPer_W
            End Get
        End Property

        Public ReadOnly Property FormaMarcado() As WhereParameter
            Get
                If _FormaMarcado_W Is Nothing Then
                    _FormaMarcado_W = TearOff.FormaMarcado
                End If
                Return _FormaMarcado_W
            End Get
        End Property

        Public ReadOnly Property ApePat() As WhereParameter
            Get
                If _ApePat_W Is Nothing Then
                    _ApePat_W = TearOff.ApePat
                End If
                Return _ApePat_W
            End Get
        End Property

        Public ReadOnly Property ApeMat() As WhereParameter
            Get
                If _ApeMat_W Is Nothing Then
                    _ApeMat_W = TearOff.ApeMat
                End If
                Return _ApeMat_W
            End Get
        End Property

        Public ReadOnly Property Nombres() As WhereParameter
            Get
                If _Nombres_W Is Nothing Then
                    _Nombres_W = TearOff.Nombres
                End If
                Return _Nombres_W
            End Get
        End Property

        Public ReadOnly Property Sexo() As WhereParameter
            Get
                If _Sexo_W Is Nothing Then
                    _Sexo_W = TearOff.Sexo
                End If
                Return _Sexo_W
            End Get
        End Property

        Public ReadOnly Property IdTipDocId() As WhereParameter
            Get
                If _IdTipDocId_W Is Nothing Then
                    _IdTipDocId_W = TearOff.IdTipDocId
                End If
                Return _IdTipDocId_W
            End Get
        End Property

        Public ReadOnly Property NroDocId() As WhereParameter
            Get
                If _NroDocId_W Is Nothing Then
                    _NroDocId_W = TearOff.NroDocId
                End If
                Return _NroDocId_W
            End Get
        End Property

        Public ReadOnly Property IdEstCivil() As WhereParameter
            Get
                If _IdEstCivil_W Is Nothing Then
                    _IdEstCivil_W = TearOff.IdEstCivil
                End If
                Return _IdEstCivil_W
            End Get
        End Property

        Public ReadOnly Property IdGradInst() As WhereParameter
            Get
                If _IdGradInst_W Is Nothing Then
                    _IdGradInst_W = TearOff.IdGradInst
                End If
                Return _IdGradInst_W
            End Get
        End Property

        Public ReadOnly Property IdProfesion() As WhereParameter
            Get
                If _IdProfesion_W Is Nothing Then
                    _IdProfesion_W = TearOff.IdProfesion
                End If
                Return _IdProfesion_W
            End Get
        End Property

        Public ReadOnly Property IdOcupacion() As WhereParameter
            Get
                If _IdOcupacion_W Is Nothing Then
                    _IdOcupacion_W = TearOff.IdOcupacion
                End If
                Return _IdOcupacion_W
            End Get
        End Property

        Public ReadOnly Property NivelAdm() As WhereParameter
            Get
                If _NivelAdm_W Is Nothing Then
                    _NivelAdm_W = TearOff.NivelAdm
                End If
                Return _NivelAdm_W
            End Get
        End Property

        Public ReadOnly Property FecProR() As WhereParameter
            Get
                If _FecProR_W Is Nothing Then
                    _FecProR_W = TearOff.FecProR
                End If
                Return _FecProR_W
            End Get
        End Property

        Public ReadOnly Property Clave() As WhereParameter
            Get
                If _Clave_W Is Nothing Then
                    _Clave_W = TearOff.Clave
                End If
                Return _Clave_W
            End Get
        End Property

        Public ReadOnly Property FechaIni() As WhereParameter
            Get
                If _FechaIni_W Is Nothing Then
                    _FechaIni_W = TearOff.FechaIni
                End If
                Return _FechaIni_W
            End Get
        End Property

        Public ReadOnly Property FechaFin() As WhereParameter
            Get
                If _FechaFin_W Is Nothing Then
                    _FechaFin_W = TearOff.FechaFin
                End If
                Return _FechaFin_W
            End Get
        End Property

        Public ReadOnly Property HoraR() As WhereParameter
            Get
                If _HoraR_W Is Nothing Then
                    _HoraR_W = TearOff.HoraR
                End If
                Return _HoraR_W
            End Get
        End Property

        Public ReadOnly Property IdUserR() As WhereParameter
            Get
                If _IdUserR_W Is Nothing Then
                    _IdUserR_W = TearOff.IdUserR
                End If
                Return _IdUserR_W
            End Get
        End Property

        Public ReadOnly Property Activo() As WhereParameter
            Get
                If _Activo_W Is Nothing Then
                    _Activo_W = TearOff.Activo
                End If
                Return _Activo_W
            End Get
        End Property

        Public ReadOnly Property Bloqueo() As WhereParameter
            Get
                If _Bloqueo_W Is Nothing Then
                    _Bloqueo_W = TearOff.Bloqueo
                End If
                Return _Bloqueo_W
            End Get
        End Property

        Private _IdPersona_W As WhereParameter = Nothing
        Private _FechaIng_W As WhereParameter = Nothing
        Private _IdCargo_W As WhereParameter = Nothing
        Private _IdArea_W As WhereParameter = Nothing
        Private _FechaSal_W As WhereParameter = Nothing
        Private _IngMensual_W As WhereParameter = Nothing
        Private _Idagencia_W As WhereParameter = Nothing
        Private _IdEstPers_W As WhereParameter = Nothing
        Private _IdUser_W As WhereParameter = Nothing
        Private _FecPro_W As WhereParameter = Nothing
        Private _Hora_W As WhereParameter = Nothing
        Private _IdEstPer_W As WhereParameter = Nothing
        Private _FormaMarcado_W As WhereParameter = Nothing
        Private _ApePat_W As WhereParameter = Nothing
        Private _ApeMat_W As WhereParameter = Nothing
        Private _Nombres_W As WhereParameter = Nothing
        Private _Sexo_W As WhereParameter = Nothing
        Private _IdTipDocId_W As WhereParameter = Nothing
        Private _NroDocId_W As WhereParameter = Nothing
        Private _IdEstCivil_W As WhereParameter = Nothing
        Private _IdGradInst_W As WhereParameter = Nothing
        Private _IdProfesion_W As WhereParameter = Nothing
        Private _IdOcupacion_W As WhereParameter = Nothing
        Private _NivelAdm_W As WhereParameter = Nothing
        Private _FecProR_W As WhereParameter = Nothing
        Private _Clave_W As WhereParameter = Nothing
        Private _FechaIni_W As WhereParameter = Nothing
        Private _FechaFin_W As WhereParameter = Nothing
        Private _HoraR_W As WhereParameter = Nothing
        Private _IdUserR_W As WhereParameter = Nothing
        Private _Activo_W As WhereParameter = Nothing
        Private _Bloqueo_W As WhereParameter = Nothing

        Public Sub WhereClauseReset()

            _IdPersona_W = Nothing
            _FechaIng_W = Nothing
            _IdCargo_W = Nothing
            _IdArea_W = Nothing
            _FechaSal_W = Nothing
            _IngMensual_W = Nothing
            _Idagencia_W = Nothing
            _IdEstPers_W = Nothing
            _IdUser_W = Nothing
            _FecPro_W = Nothing
            _Hora_W = Nothing
            _IdEstPer_W = Nothing
            _FormaMarcado_W = Nothing
            _ApePat_W = Nothing
            _ApeMat_W = Nothing
            _Nombres_W = Nothing
            _Sexo_W = Nothing
            _IdTipDocId_W = Nothing
            _NroDocId_W = Nothing
            _IdEstCivil_W = Nothing
            _IdGradInst_W = Nothing
            _IdProfesion_W = Nothing
            _IdOcupacion_W = Nothing
            _NivelAdm_W = Nothing
            _FecProR_W = Nothing
            _Clave_W = Nothing
            _FechaIni_W = Nothing
            _FechaFin_W = Nothing
            _HoraR_W = Nothing
            _IdUserR_W = Nothing
            _Activo_W = Nothing
            _Bloqueo_W = Nothing
            Me._entity.Query.FlushWhereParameters()

        End Sub

        Private _entity As BusinessEntity
        Private _tearOff As TearOffWhereParameter
    End Class

    Public ReadOnly Property Where() As WhereClause
        Get
            If _whereClause Is Nothing Then
                _whereClause = New WhereClause(Me)
            End If

            Return _whereClause
        End Get
    End Property

    Private _whereClause As WhereClause = Nothing
#End Region

#Region "Aggregate Clause"
    Public Class AggregateClause

        Public Sub New(ByVal entity As BusinessEntity)
            Me._entity = entity
        End Sub

        Public ReadOnly Property TearOff() As TearOffAggregateParameter
            Get
                If _tearOff Is Nothing Then
                    _tearOff = New TearOffAggregateParameter(Me)
                End If

                Return _tearOff
            End Get
        End Property

#Region "AggregateParameter TearOff's"
        Public Class TearOffAggregateParameter

            Public Sub New(ByVal clause As AggregateClause)
                Me._clause = clause
            End Sub


            Public ReadOnly Property IdPersona() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.IdPersona, Parameters.IdPersona)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property FechaIng() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.FechaIng, Parameters.FechaIng)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property IdCargo() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.IdCargo, Parameters.IdCargo)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property IdArea() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.IdArea, Parameters.IdArea)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property FechaSal() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.FechaSal, Parameters.FechaSal)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property IngMensual() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.IngMensual, Parameters.IngMensual)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property Idagencia() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Idagencia, Parameters.Idagencia)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property IdEstPers() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.IdEstPers, Parameters.IdEstPers)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property IdUser() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.IdUser, Parameters.IdUser)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property FecPro() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.FecPro, Parameters.FecPro)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property Hora() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Hora, Parameters.Hora)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property IdEstPer() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.IdEstPer, Parameters.IdEstPer)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property FormaMarcado() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.FormaMarcado, Parameters.FormaMarcado)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property ApePat() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.ApePat, Parameters.ApePat)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property ApeMat() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.ApeMat, Parameters.ApeMat)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property Nombres() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Nombres, Parameters.Nombres)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property Sexo() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Sexo, Parameters.Sexo)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property IdTipDocId() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.IdTipDocId, Parameters.IdTipDocId)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property NroDocId() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.NroDocId, Parameters.NroDocId)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property IdEstCivil() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.IdEstCivil, Parameters.IdEstCivil)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property IdGradInst() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.IdGradInst, Parameters.IdGradInst)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property IdProfesion() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.IdProfesion, Parameters.IdProfesion)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property IdOcupacion() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.IdOcupacion, Parameters.IdOcupacion)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property NivelAdm() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.NivelAdm, Parameters.NivelAdm)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property FecProR() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.FecProR, Parameters.FecProR)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property Clave() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Clave, Parameters.Clave)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property FechaIni() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.FechaIni, Parameters.FechaIni)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property FechaFin() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.FechaFin, Parameters.FechaFin)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property HoraR() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.HoraR, Parameters.HoraR)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property IdUserR() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.IdUserR, Parameters.IdUserR)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property Activo() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Activo, Parameters.Activo)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property

            Public ReadOnly Property Bloqueo() As AggregateParameter
                Get
                    Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Bloqueo, Parameters.Bloqueo)
                    Me._clause._entity.Query.AddAggregateParameter(where)
                    Return where
                End Get
            End Property


            Private _clause As AggregateClause
        End Class
#End Region

        Public ReadOnly Property IdPersona() As AggregateParameter
            Get
                If _IdPersona_W Is Nothing Then
                    _IdPersona_W = TearOff.IdPersona
                End If
                Return _IdPersona_W
            End Get
        End Property

        Public ReadOnly Property FechaIng() As AggregateParameter
            Get
                If _FechaIng_W Is Nothing Then
                    _FechaIng_W = TearOff.FechaIng
                End If
                Return _FechaIng_W
            End Get
        End Property

        Public ReadOnly Property IdCargo() As AggregateParameter
            Get
                If _IdCargo_W Is Nothing Then
                    _IdCargo_W = TearOff.IdCargo
                End If
                Return _IdCargo_W
            End Get
        End Property

        Public ReadOnly Property IdArea() As AggregateParameter
            Get
                If _IdArea_W Is Nothing Then
                    _IdArea_W = TearOff.IdArea
                End If
                Return _IdArea_W
            End Get
        End Property

        Public ReadOnly Property FechaSal() As AggregateParameter
            Get
                If _FechaSal_W Is Nothing Then
                    _FechaSal_W = TearOff.FechaSal
                End If
                Return _FechaSal_W
            End Get
        End Property

        Public ReadOnly Property IngMensual() As AggregateParameter
            Get
                If _IngMensual_W Is Nothing Then
                    _IngMensual_W = TearOff.IngMensual
                End If
                Return _IngMensual_W
            End Get
        End Property

        Public ReadOnly Property Idagencia() As AggregateParameter
            Get
                If _Idagencia_W Is Nothing Then
                    _Idagencia_W = TearOff.Idagencia
                End If
                Return _Idagencia_W
            End Get
        End Property

        Public ReadOnly Property IdEstPers() As AggregateParameter
            Get
                If _IdEstPers_W Is Nothing Then
                    _IdEstPers_W = TearOff.IdEstPers
                End If
                Return _IdEstPers_W
            End Get
        End Property

        Public ReadOnly Property IdUser() As AggregateParameter
            Get
                If _IdUser_W Is Nothing Then
                    _IdUser_W = TearOff.IdUser
                End If
                Return _IdUser_W
            End Get
        End Property

        Public ReadOnly Property FecPro() As AggregateParameter
            Get
                If _FecPro_W Is Nothing Then
                    _FecPro_W = TearOff.FecPro
                End If
                Return _FecPro_W
            End Get
        End Property

        Public ReadOnly Property Hora() As AggregateParameter
            Get
                If _Hora_W Is Nothing Then
                    _Hora_W = TearOff.Hora
                End If
                Return _Hora_W
            End Get
        End Property

        Public ReadOnly Property IdEstPer() As AggregateParameter
            Get
                If _IdEstPer_W Is Nothing Then
                    _IdEstPer_W = TearOff.IdEstPer
                End If
                Return _IdEstPer_W
            End Get
        End Property

        Public ReadOnly Property FormaMarcado() As AggregateParameter
            Get
                If _FormaMarcado_W Is Nothing Then
                    _FormaMarcado_W = TearOff.FormaMarcado
                End If
                Return _FormaMarcado_W
            End Get
        End Property

        Public ReadOnly Property ApePat() As AggregateParameter
            Get
                If _ApePat_W Is Nothing Then
                    _ApePat_W = TearOff.ApePat
                End If
                Return _ApePat_W
            End Get
        End Property

        Public ReadOnly Property ApeMat() As AggregateParameter
            Get
                If _ApeMat_W Is Nothing Then
                    _ApeMat_W = TearOff.ApeMat
                End If
                Return _ApeMat_W
            End Get
        End Property

        Public ReadOnly Property Nombres() As AggregateParameter
            Get
                If _Nombres_W Is Nothing Then
                    _Nombres_W = TearOff.Nombres
                End If
                Return _Nombres_W
            End Get
        End Property

        Public ReadOnly Property Sexo() As AggregateParameter
            Get
                If _Sexo_W Is Nothing Then
                    _Sexo_W = TearOff.Sexo
                End If
                Return _Sexo_W
            End Get
        End Property

        Public ReadOnly Property IdTipDocId() As AggregateParameter
            Get
                If _IdTipDocId_W Is Nothing Then
                    _IdTipDocId_W = TearOff.IdTipDocId
                End If
                Return _IdTipDocId_W
            End Get
        End Property

        Public ReadOnly Property NroDocId() As AggregateParameter
            Get
                If _NroDocId_W Is Nothing Then
                    _NroDocId_W = TearOff.NroDocId
                End If
                Return _NroDocId_W
            End Get
        End Property

        Public ReadOnly Property IdEstCivil() As AggregateParameter
            Get
                If _IdEstCivil_W Is Nothing Then
                    _IdEstCivil_W = TearOff.IdEstCivil
                End If
                Return _IdEstCivil_W
            End Get
        End Property

        Public ReadOnly Property IdGradInst() As AggregateParameter
            Get
                If _IdGradInst_W Is Nothing Then
                    _IdGradInst_W = TearOff.IdGradInst
                End If
                Return _IdGradInst_W
            End Get
        End Property

        Public ReadOnly Property IdProfesion() As AggregateParameter
            Get
                If _IdProfesion_W Is Nothing Then
                    _IdProfesion_W = TearOff.IdProfesion
                End If
                Return _IdProfesion_W
            End Get
        End Property

        Public ReadOnly Property IdOcupacion() As AggregateParameter
            Get
                If _IdOcupacion_W Is Nothing Then
                    _IdOcupacion_W = TearOff.IdOcupacion
                End If
                Return _IdOcupacion_W
            End Get
        End Property

        Public ReadOnly Property NivelAdm() As AggregateParameter
            Get
                If _NivelAdm_W Is Nothing Then
                    _NivelAdm_W = TearOff.NivelAdm
                End If
                Return _NivelAdm_W
            End Get
        End Property

        Public ReadOnly Property FecProR() As AggregateParameter
            Get
                If _FecProR_W Is Nothing Then
                    _FecProR_W = TearOff.FecProR
                End If
                Return _FecProR_W
            End Get
        End Property

        Public ReadOnly Property Clave() As AggregateParameter
            Get
                If _Clave_W Is Nothing Then
                    _Clave_W = TearOff.Clave
                End If
                Return _Clave_W
            End Get
        End Property

        Public ReadOnly Property FechaIni() As AggregateParameter
            Get
                If _FechaIni_W Is Nothing Then
                    _FechaIni_W = TearOff.FechaIni
                End If
                Return _FechaIni_W
            End Get
        End Property

        Public ReadOnly Property FechaFin() As AggregateParameter
            Get
                If _FechaFin_W Is Nothing Then
                    _FechaFin_W = TearOff.FechaFin
                End If
                Return _FechaFin_W
            End Get
        End Property

        Public ReadOnly Property HoraR() As AggregateParameter
            Get
                If _HoraR_W Is Nothing Then
                    _HoraR_W = TearOff.HoraR
                End If
                Return _HoraR_W
            End Get
        End Property

        Public ReadOnly Property IdUserR() As AggregateParameter
            Get
                If _IdUserR_W Is Nothing Then
                    _IdUserR_W = TearOff.IdUserR
                End If
                Return _IdUserR_W
            End Get
        End Property

        Public ReadOnly Property Activo() As AggregateParameter
            Get
                If _Activo_W Is Nothing Then
                    _Activo_W = TearOff.Activo
                End If
                Return _Activo_W
            End Get
        End Property

        Public ReadOnly Property Bloqueo() As AggregateParameter
            Get
                If _Bloqueo_W Is Nothing Then
                    _Bloqueo_W = TearOff.Bloqueo
                End If
                Return _Bloqueo_W
            End Get
        End Property

        Private _IdPersona_W As AggregateParameter = Nothing
        Private _FechaIng_W As AggregateParameter = Nothing
        Private _IdCargo_W As AggregateParameter = Nothing
        Private _IdArea_W As AggregateParameter = Nothing
        Private _FechaSal_W As AggregateParameter = Nothing
        Private _IngMensual_W As AggregateParameter = Nothing
        Private _Idagencia_W As AggregateParameter = Nothing
        Private _IdEstPers_W As AggregateParameter = Nothing
        Private _IdUser_W As AggregateParameter = Nothing
        Private _FecPro_W As AggregateParameter = Nothing
        Private _Hora_W As AggregateParameter = Nothing
        Private _IdEstPer_W As AggregateParameter = Nothing
        Private _FormaMarcado_W As AggregateParameter = Nothing
        Private _ApePat_W As AggregateParameter = Nothing
        Private _ApeMat_W As AggregateParameter = Nothing
        Private _Nombres_W As AggregateParameter = Nothing
        Private _Sexo_W As AggregateParameter = Nothing
        Private _IdTipDocId_W As AggregateParameter = Nothing
        Private _NroDocId_W As AggregateParameter = Nothing
        Private _IdEstCivil_W As AggregateParameter = Nothing
        Private _IdGradInst_W As AggregateParameter = Nothing
        Private _IdProfesion_W As AggregateParameter = Nothing
        Private _IdOcupacion_W As AggregateParameter = Nothing
        Private _NivelAdm_W As AggregateParameter = Nothing
        Private _FecProR_W As AggregateParameter = Nothing
        Private _Clave_W As AggregateParameter = Nothing
        Private _FechaIni_W As AggregateParameter = Nothing
        Private _FechaFin_W As AggregateParameter = Nothing
        Private _HoraR_W As AggregateParameter = Nothing
        Private _IdUserR_W As AggregateParameter = Nothing
        Private _Activo_W As AggregateParameter = Nothing
        Private _Bloqueo_W As AggregateParameter = Nothing

        Public Sub AggregateClauseReset()

            _IdPersona_W = Nothing
            _FechaIng_W = Nothing
            _IdCargo_W = Nothing
            _IdArea_W = Nothing
            _FechaSal_W = Nothing
            _IngMensual_W = Nothing
            _Idagencia_W = Nothing
            _IdEstPers_W = Nothing
            _IdUser_W = Nothing
            _FecPro_W = Nothing
            _Hora_W = Nothing
            _IdEstPer_W = Nothing
            _FormaMarcado_W = Nothing
            _ApePat_W = Nothing
            _ApeMat_W = Nothing
            _Nombres_W = Nothing
            _Sexo_W = Nothing
            _IdTipDocId_W = Nothing
            _NroDocId_W = Nothing
            _IdEstCivil_W = Nothing
            _IdGradInst_W = Nothing
            _IdProfesion_W = Nothing
            _IdOcupacion_W = Nothing
            _NivelAdm_W = Nothing
            _FecProR_W = Nothing
            _Clave_W = Nothing
            _FechaIni_W = Nothing
            _FechaFin_W = Nothing
            _HoraR_W = Nothing
            _IdUserR_W = Nothing
            _Activo_W = Nothing
            _Bloqueo_W = Nothing
            Me._entity.Query.FlushAggregateParameters()

        End Sub

        Private _entity As BusinessEntity
        Private _tearOff As TearOffAggregateParameter
    End Class

    Public ReadOnly Property Aggregate() As AggregateClause
        Get
            If _aggregateClause Is Nothing Then
                _aggregateClause = New AggregateClause(Me)
            End If

            Return _aggregateClause
        End Get
    End Property

    Private _aggregateClause As AggregateClause = Nothing
#End Region

    Protected Overrides Function GetInsertCommand() As IDbCommand
        Return Nothing
    End Function

    Protected Overrides Function GetUpdateCommand() As IDbCommand
        Return Nothing
    End Function

    Protected Overrides Function GetDeleteCommand() As IDbCommand
        Return Nothing
    End Function
    Public Function obtListaxArea(ByVal nCaso As String, ByVal sIdItem As String) As DataTable

        Select Case nCaso
            Case 1
                Me.Where.IdArea.Value = sIdItem
                Me.Where.IdArea.Operator = WhereParameter.Operand.Equal
            Case 2
                Me.Where.IdCargo.Value = sIdItem
                Me.Where.IdCargo.Operator = WhereParameter.Operand.Equal
            Case Else
        End Select
        If Query.Load Then
            Return DataTable
        Else
            Return Nothing
        End If
    End Function
End Class

