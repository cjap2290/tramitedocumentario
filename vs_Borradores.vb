
'===============================================================================
'  Generated From - VbNet_SQL_dOOdads_View.vbgen
'
'  The supporting base class SqlClientEntity is in the 
'  Architecture directory in "dOOdads".
'===============================================================================

' Generated by MyGeneration Version # (1.3.0.9)

Imports System
Imports System.Data
Imports System.Data.SqlClient
Imports System.Collections
Imports System.Collections.Specialized

Imports MyGeneration.dOOdads

Public Class vs_Borradores
	Inherits  SqlClientEntity
	
		Public Sub New() 
			Me.QuerySource = "vs_Borradores"
			Me.MappingName = "vs_Borradores"
		End Sub

	'=================================================================
	'  	Public Function LoadAll() As Boolean
	'=================================================================
	'  Loads all of the records in the database, and sets the currentRow to the first row
	'=================================================================
	Public Function LoadAll() As Boolean
    	Return MyBase.Query.Load()
	End Function
	
	Public Overrides Sub FlushData()
		Me._whereClause = nothing
		Me._aggregateClause = nothing		
		MyBase.FlushData()
	End Sub	

	#Region "Parameters"
	Protected class Parameters 
		
		Public Shared ReadOnly Property IdDocInterno As SqlParameter
			Get
				Return New SqlParameter("IdDocInterno", SqlDbType.Int, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property NroDoc As SqlParameter
			Get
				Return New SqlParameter("NroDoc", SqlDbType.Char, 6)
			End Get
		End Property
		
		Public Shared ReadOnly Property IdTipoDocumento As SqlParameter
			Get
				Return New SqlParameter("IdTipoDocumento", SqlDbType.Int, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property IdArea As SqlParameter
			Get
				Return New SqlParameter("IdArea", SqlDbType.Char, 2)
			End Get
		End Property
		
		Public Shared ReadOnly Property IdAgencia As SqlParameter
			Get
				Return New SqlParameter("IdAgencia", SqlDbType.Char, 2)
			End Get
		End Property
		
		Public Shared ReadOnly Property Periodo As SqlParameter
			Get
				Return New SqlParameter("Periodo", SqlDbType.Char, 6)
			End Get
		End Property
		
		Public Shared ReadOnly Property Asunto As SqlParameter
			Get
				Return New SqlParameter("Asunto", SqlDbType.VarChar, 50)
			End Get
		End Property
		
		Public Shared ReadOnly Property Encabezado As SqlParameter
			Get
				Return New SqlParameter("Encabezado", SqlDbType.VarChar, 30)
			End Get
		End Property
		
		Public Shared ReadOnly Property Prioridad As SqlParameter
			Get
				Return New SqlParameter("Prioridad", SqlDbType.Char, 1)
			End Get
		End Property
		
		Public Shared ReadOnly Property NombreArchivo As SqlParameter
			Get
				Return New SqlParameter("NombreArchivo", SqlDbType.VarChar, 30)
			End Get
		End Property
		
		Public Shared ReadOnly Property RutaArchivo As SqlParameter
			Get
				Return New SqlParameter("RutaArchivo", SqlDbType.VarChar, 30)
			End Get
		End Property
		
		Public Shared ReadOnly Property FechaR As SqlParameter
			Get
				Return New SqlParameter("FechaR", SqlDbType.DateTime, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property IdUserR As SqlParameter
			Get
				Return New SqlParameter("IdUserR", SqlDbType.Char, 6)
			End Get
		End Property
		
		Public Shared ReadOnly Property IdEstDoc As SqlParameter
			Get
				Return New SqlParameter("IdEstDoc", SqlDbType.Int, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property IdAsigDocInterno As SqlParameter
			Get
				Return New SqlParameter("IdAsigDocInterno", SqlDbType.Int, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property IdUser As SqlParameter
			Get
				Return New SqlParameter("IdUser", SqlDbType.Char, 6)
			End Get
		End Property
		
		Public Shared ReadOnly Property IdEstAsigDoc As SqlParameter
			Get
				Return New SqlParameter("IdEstAsigDoc", SqlDbType.Int, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property Condicion As SqlParameter
			Get
				Return New SqlParameter("Condicion", SqlDbType.Char, 1)
			End Get
		End Property
		
		Public Shared ReadOnly Property FechaRAsigna As SqlParameter
			Get
				Return New SqlParameter("FechaRAsigna", SqlDbType.DateTime, 0)
			End Get
		End Property
		
		Public Shared ReadOnly Property IdUserAsigna As SqlParameter
			Get
				Return New SqlParameter("IdUserAsigna", SqlDbType.Char, 6)
			End Get
		End Property
		
		Public Shared ReadOnly Property NombreCompleto As SqlParameter
			Get
				Return New SqlParameter("NombreCompleto", SqlDbType.VarChar, 112)
			End Get
		End Property
		
		Public Shared ReadOnly Property Idcargo As SqlParameter
			Get
				Return New SqlParameter("Idcargo", SqlDbType.Char, 2)
			End Get
		End Property
		
	End Class
	#End Region	

	#Region "ColumnNames"
	Public class ColumnNames
		
        Public Const IdDocInterno As String = "IdDocInterno"
        Public Const NroDoc As String = "NroDoc"
        Public Const IdTipoDocumento As String = "IdTipoDocumento"
        Public Const IdArea As String = "IdArea"
        Public Const IdAgencia As String = "IdAgencia"
        Public Const Periodo As String = "Periodo"
        Public Const Asunto As String = "Asunto"
        Public Const Encabezado As String = "Encabezado"
        Public Const Prioridad As String = "Prioridad"
        Public Const NombreArchivo As String = "NombreArchivo"
        Public Const RutaArchivo As String = "RutaArchivo"
        Public Const FechaR As String = "FechaR"
        Public Const IdUserR As String = "IdUserR"
        Public Const IdEstDoc As String = "IdEstDoc"
        Public Const IdAsigDocInterno As String = "IdAsigDocInterno"
        Public Const IdUser As String = "IdUser"
        Public Const IdEstAsigDoc As String = "IdEstAsigDoc"
        Public Const Condicion As String = "Condicion"
        Public Const FechaRAsigna As String = "FechaRAsigna"
        Public Const IdUserAsigna As String = "IdUserAsigna"
        Public Const NombreCompleto As String = "NombreCompleto"
        Public Const Idcargo As String = "idcargo"

		Shared Public Function ToPropertyName(ByVal columnName As String) As String

			If ht Is Nothing Then
			
				ht = new Hashtable
				
				ht(IdDocInterno) = vs_Borradores.PropertyNames.IdDocInterno
				ht(NroDoc) = vs_Borradores.PropertyNames.NroDoc
				ht(IdTipoDocumento) = vs_Borradores.PropertyNames.IdTipoDocumento
				ht(IdArea) = vs_Borradores.PropertyNames.IdArea
				ht(IdAgencia) = vs_Borradores.PropertyNames.IdAgencia
				ht(Periodo) = vs_Borradores.PropertyNames.Periodo
				ht(Asunto) = vs_Borradores.PropertyNames.Asunto
				ht(Encabezado) = vs_Borradores.PropertyNames.Encabezado
				ht(Prioridad) = vs_Borradores.PropertyNames.Prioridad
				ht(NombreArchivo) = vs_Borradores.PropertyNames.NombreArchivo
				ht(RutaArchivo) = vs_Borradores.PropertyNames.RutaArchivo
				ht(FechaR) = vs_Borradores.PropertyNames.FechaR
				ht(IdUserR) = vs_Borradores.PropertyNames.IdUserR
				ht(IdEstDoc) = vs_Borradores.PropertyNames.IdEstDoc
				ht(IdAsigDocInterno) = vs_Borradores.PropertyNames.IdAsigDocInterno
				ht(IdUser) = vs_Borradores.PropertyNames.IdUser
				ht(IdEstAsigDoc) = vs_Borradores.PropertyNames.IdEstAsigDoc
				ht(Condicion) = vs_Borradores.PropertyNames.Condicion
				ht(FechaRAsigna) = vs_Borradores.PropertyNames.FechaRAsigna
				ht(IdUserAsigna) = vs_Borradores.PropertyNames.IdUserAsigna
				ht(NombreCompleto) = vs_Borradores.PropertyNames.NombreCompleto
				ht(Idcargo) = vs_Borradores.PropertyNames.Idcargo

			End If
			
			Return CType(ht(columnName), String)
			
		End Function
		
		Shared Private ht  As Hashtable = Nothing		 
	End Class
	#End Region	
	
	#Region "PropertyNames"
	Public class PropertyNames
		
        Public Const IdDocInterno As String = "IdDocInterno"
        Public Const NroDoc As String = "NroDoc"
        Public Const IdTipoDocumento As String = "IdTipoDocumento"
        Public Const IdArea As String = "IdArea"
        Public Const IdAgencia As String = "IdAgencia"
        Public Const Periodo As String = "Periodo"
        Public Const Asunto As String = "Asunto"
        Public Const Encabezado As String = "Encabezado"
        Public Const Prioridad As String = "Prioridad"
        Public Const NombreArchivo As String = "NombreArchivo"
        Public Const RutaArchivo As String = "RutaArchivo"
        Public Const FechaR As String = "FechaR"
        Public Const IdUserR As String = "IdUserR"
        Public Const IdEstDoc As String = "IdEstDoc"
        Public Const IdAsigDocInterno As String = "IdAsigDocInterno"
        Public Const IdUser As String = "IdUser"
        Public Const IdEstAsigDoc As String = "IdEstAsigDoc"
        Public Const Condicion As String = "Condicion"
        Public Const FechaRAsigna As String = "FechaRAsigna"
        Public Const IdUserAsigna As String = "IdUserAsigna"
        Public Const NombreCompleto As String = "NombreCompleto"
        Public Const Idcargo As String = "Idcargo"

		Shared Public Function ToColumnName(ByVal propertyName As String) As String

			If ht Is Nothing Then
			
				ht = new Hashtable
				
				ht(IdDocInterno) = vs_Borradores.ColumnNames.IdDocInterno
				ht(NroDoc) = vs_Borradores.ColumnNames.NroDoc
				ht(IdTipoDocumento) = vs_Borradores.ColumnNames.IdTipoDocumento
				ht(IdArea) = vs_Borradores.ColumnNames.IdArea
				ht(IdAgencia) = vs_Borradores.ColumnNames.IdAgencia
				ht(Periodo) = vs_Borradores.ColumnNames.Periodo
				ht(Asunto) = vs_Borradores.ColumnNames.Asunto
				ht(Encabezado) = vs_Borradores.ColumnNames.Encabezado
				ht(Prioridad) = vs_Borradores.ColumnNames.Prioridad
				ht(NombreArchivo) = vs_Borradores.ColumnNames.NombreArchivo
				ht(RutaArchivo) = vs_Borradores.ColumnNames.RutaArchivo
				ht(FechaR) = vs_Borradores.ColumnNames.FechaR
				ht(IdUserR) = vs_Borradores.ColumnNames.IdUserR
				ht(IdEstDoc) = vs_Borradores.ColumnNames.IdEstDoc
				ht(IdAsigDocInterno) = vs_Borradores.ColumnNames.IdAsigDocInterno
				ht(IdUser) = vs_Borradores.ColumnNames.IdUser
				ht(IdEstAsigDoc) = vs_Borradores.ColumnNames.IdEstAsigDoc
				ht(Condicion) = vs_Borradores.ColumnNames.Condicion
				ht(FechaRAsigna) = vs_Borradores.ColumnNames.FechaRAsigna
				ht(IdUserAsigna) = vs_Borradores.ColumnNames.IdUserAsigna
				ht(NombreCompleto) = vs_Borradores.ColumnNames.NombreCompleto
				ht(Idcargo) = vs_Borradores.ColumnNames.Idcargo

			End If
			
			Return CType(ht(propertyName), String)
			
		End Function
		
		Shared Private ht  As Hashtable = Nothing
		
	End Class
	#End Region	
	
	#Region "StringPropertyNames"
	Public class StringPropertyNames
		
        Public Const IdDocInterno As String = "s_IdDocInterno"
        Public Const NroDoc As String = "s_NroDoc"
        Public Const IdTipoDocumento As String = "s_IdTipoDocumento"
        Public Const IdArea As String = "s_IdArea"
        Public Const IdAgencia As String = "s_IdAgencia"
        Public Const Periodo As String = "s_Periodo"
        Public Const Asunto As String = "s_Asunto"
        Public Const Encabezado As String = "s_Encabezado"
        Public Const Prioridad As String = "s_Prioridad"
        Public Const NombreArchivo As String = "s_NombreArchivo"
        Public Const RutaArchivo As String = "s_RutaArchivo"
        Public Const FechaR As String = "s_FechaR"
        Public Const IdUserR As String = "s_IdUserR"
        Public Const IdEstDoc As String = "s_IdEstDoc"
        Public Const IdAsigDocInterno As String = "s_IdAsigDocInterno"
        Public Const IdUser As String = "s_IdUser"
        Public Const IdEstAsigDoc As String = "s_IdEstAsigDoc"
        Public Const Condicion As String = "s_Condicion"
        Public Const FechaRAsigna As String = "s_FechaRAsigna"
        Public Const IdUserAsigna As String = "s_IdUserAsigna"
        Public Const NombreCompleto As String = "s_NombreCompleto"
        Public Const Idcargo As String = "s_Idcargo"

	End Class
	#End Region		
	
	#Region "Properties" 
    Public Overridable Property IdDocInterno() As Integer
        Get
            Return MyBase.GetInteger(ColumnNames.IdDocInterno)
        End Get
        Set(ByVal Value As Integer)
            MyBase.SetInteger(ColumnNames.IdDocInterno, Value)
        End Set
    End Property

    Public Overridable Property NroDoc() As String
        Get
            Return MyBase.GetString(ColumnNames.NroDoc)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.NroDoc, Value)
        End Set
    End Property

    Public Overridable Property IdTipoDocumento() As Integer
        Get
            Return MyBase.GetInteger(ColumnNames.IdTipoDocumento)
        End Get
        Set(ByVal Value As Integer)
            MyBase.SetInteger(ColumnNames.IdTipoDocumento, Value)
        End Set
    End Property

    Public Overridable Property IdArea() As String
        Get
            Return MyBase.GetString(ColumnNames.IdArea)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.IdArea, Value)
        End Set
    End Property

    Public Overridable Property IdAgencia() As String
        Get
            Return MyBase.GetString(ColumnNames.IdAgencia)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.IdAgencia, Value)
        End Set
    End Property

    Public Overridable Property Periodo() As String
        Get
            Return MyBase.GetString(ColumnNames.Periodo)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.Periodo, Value)
        End Set
    End Property

    Public Overridable Property Asunto() As String
        Get
            Return MyBase.GetString(ColumnNames.Asunto)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.Asunto, Value)
        End Set
    End Property

    Public Overridable Property Encabezado() As String
        Get
            Return MyBase.GetString(ColumnNames.Encabezado)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.Encabezado, Value)
        End Set
    End Property

    Public Overridable Property Prioridad() As String
        Get
            Return MyBase.GetString(ColumnNames.Prioridad)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.Prioridad, Value)
        End Set
    End Property

    Public Overridable Property NombreArchivo() As String
        Get
            Return MyBase.GetString(ColumnNames.NombreArchivo)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.NombreArchivo, Value)
        End Set
    End Property

    Public Overridable Property RutaArchivo() As String
        Get
            Return MyBase.GetString(ColumnNames.RutaArchivo)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.RutaArchivo, Value)
        End Set
    End Property

    Public Overridable Property FechaR() As DateTime
        Get
            Return MyBase.GetDateTime(ColumnNames.FechaR)
        End Get
        Set(ByVal Value As DateTime)
            MyBase.SetDateTime(ColumnNames.FechaR, Value)
        End Set
    End Property

    Public Overridable Property IdUserR() As String
        Get
            Return MyBase.GetString(ColumnNames.IdUserR)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.IdUserR, Value)
        End Set
    End Property

    Public Overridable Property IdEstDoc() As Integer
        Get
            Return MyBase.GetInteger(ColumnNames.IdEstDoc)
        End Get
        Set(ByVal Value As Integer)
            MyBase.SetInteger(ColumnNames.IdEstDoc, Value)
        End Set
    End Property

    Public Overridable Property IdAsigDocInterno() As Integer
        Get
            Return MyBase.GetInteger(ColumnNames.IdAsigDocInterno)
        End Get
        Set(ByVal Value As Integer)
            MyBase.SetInteger(ColumnNames.IdAsigDocInterno, Value)
        End Set
    End Property

    Public Overridable Property IdUser() As String
        Get
            Return MyBase.GetString(ColumnNames.IdUser)
        End Get
        Set(ByVal Value As String)
            MyBase.SetString(ColumnNames.IdUser, Value)
        End Set
    End Property

    Public Overridable Property IdEstAsigDoc() As Integer
        Get
            Return MyBase.GetInteger(ColumnNames.IdEstAsigDoc)
        End Get
        Set(ByVal Value As Integer)
            MyBase.SetInteger(ColumnNames.IdEstAsigDoc, Value)
        End Set
    End Property

		Public Overridable Property Condicion As string
			Get
				Return MyBase.Getstring(ColumnNames.Condicion)
			End Get
			Set(ByVal Value As string)
				MyBase.Setstring(ColumnNames.Condicion, Value)
			End Set
		End Property

		Public Overridable Property FechaRAsigna As DateTime
			Get
				Return MyBase.GetDateTime(ColumnNames.FechaRAsigna)
			End Get
			Set(ByVal Value As DateTime)
				MyBase.SetDateTime(ColumnNames.FechaRAsigna, Value)
			End Set
		End Property

		Public Overridable Property IdUserAsigna As string
			Get
				Return MyBase.Getstring(ColumnNames.IdUserAsigna)
			End Get
			Set(ByVal Value As string)
				MyBase.Setstring(ColumnNames.IdUserAsigna, Value)
			End Set
		End Property

		Public Overridable Property NombreCompleto As string
			Get
				Return MyBase.Getstring(ColumnNames.NombreCompleto)
			End Get
			Set(ByVal Value As string)
				MyBase.Setstring(ColumnNames.NombreCompleto, Value)
			End Set
		End Property

		Public Overridable Property Idcargo As string
			Get
				Return MyBase.Getstring(ColumnNames.Idcargo)
			End Get
			Set(ByVal Value As string)
				MyBase.Setstring(ColumnNames.Idcargo, Value)
			End Set
		End Property


	#End Region  
	
	#Region "String Properties" 

		Public Overridable Property s_IdDocInterno As String
			Get
				If Me.IsColumnNull(ColumnNames.IdDocInterno) Then
					Return String.Empty
				Else
                Return MyBase.GetIntegerAsString(ColumnNames.IdDocInterno)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.IdDocInterno)
            Else
                Me.IdDocInterno = MyBase.SetIntegerAsString(ColumnNames.IdDocInterno, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_NroDoc() As String
        Get
            If Me.IsColumnNull(ColumnNames.NroDoc) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.NroDoc)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.NroDoc)
            Else
                Me.NroDoc = MyBase.SetStringAsString(ColumnNames.NroDoc, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_IdTipoDocumento() As String
        Get
            If Me.IsColumnNull(ColumnNames.IdTipoDocumento) Then
                Return String.Empty
            Else
                Return MyBase.GetIntegerAsString(ColumnNames.IdTipoDocumento)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.IdTipoDocumento)
            Else
                Me.IdTipoDocumento = MyBase.SetIntegerAsString(ColumnNames.IdTipoDocumento, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_IdArea() As String
        Get
            If Me.IsColumnNull(ColumnNames.IdArea) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.IdArea)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.IdArea)
            Else
                Me.IdArea = MyBase.SetStringAsString(ColumnNames.IdArea, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_IdAgencia() As String
        Get
            If Me.IsColumnNull(ColumnNames.IdAgencia) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.IdAgencia)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.IdAgencia)
            Else
                Me.IdAgencia = MyBase.SetStringAsString(ColumnNames.IdAgencia, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_Periodo() As String
        Get
            If Me.IsColumnNull(ColumnNames.Periodo) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.Periodo)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.Periodo)
            Else
                Me.Periodo = MyBase.SetStringAsString(ColumnNames.Periodo, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_Asunto() As String
        Get
            If Me.IsColumnNull(ColumnNames.Asunto) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.Asunto)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.Asunto)
            Else
                Me.Asunto = MyBase.SetStringAsString(ColumnNames.Asunto, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_Encabezado() As String
        Get
            If Me.IsColumnNull(ColumnNames.Encabezado) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.Encabezado)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.Encabezado)
            Else
                Me.Encabezado = MyBase.SetStringAsString(ColumnNames.Encabezado, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_Prioridad() As String
        Get
            If Me.IsColumnNull(ColumnNames.Prioridad) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.Prioridad)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.Prioridad)
            Else
                Me.Prioridad = MyBase.SetStringAsString(ColumnNames.Prioridad, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_NombreArchivo() As String
        Get
            If Me.IsColumnNull(ColumnNames.NombreArchivo) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.NombreArchivo)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.NombreArchivo)
            Else
                Me.NombreArchivo = MyBase.SetStringAsString(ColumnNames.NombreArchivo, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_RutaArchivo() As String
        Get
            If Me.IsColumnNull(ColumnNames.RutaArchivo) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.RutaArchivo)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.RutaArchivo)
            Else
                Me.RutaArchivo = MyBase.SetStringAsString(ColumnNames.RutaArchivo, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_FechaR() As String
        Get
            If Me.IsColumnNull(ColumnNames.FechaR) Then
                Return String.Empty
            Else
                Return MyBase.GetDateTimeAsString(ColumnNames.FechaR)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.FechaR)
            Else
                Me.FechaR = MyBase.SetDateTimeAsString(ColumnNames.FechaR, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_IdUserR() As String
        Get
            If Me.IsColumnNull(ColumnNames.IdUserR) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.IdUserR)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.IdUserR)
            Else
                Me.IdUserR = MyBase.SetStringAsString(ColumnNames.IdUserR, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_IdEstDoc() As String
        Get
            If Me.IsColumnNull(ColumnNames.IdEstDoc) Then
                Return String.Empty
            Else
                Return MyBase.GetIntegerAsString(ColumnNames.IdEstDoc)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.IdEstDoc)
            Else
                Me.IdEstDoc = MyBase.SetIntegerAsString(ColumnNames.IdEstDoc, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_IdAsigDocInterno() As String
        Get
            If Me.IsColumnNull(ColumnNames.IdAsigDocInterno) Then
                Return String.Empty
            Else
                Return MyBase.GetIntegerAsString(ColumnNames.IdAsigDocInterno)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.IdAsigDocInterno)
            Else
                Me.IdAsigDocInterno = MyBase.SetIntegerAsString(ColumnNames.IdAsigDocInterno, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_IdUser() As String
        Get
            If Me.IsColumnNull(ColumnNames.IdUser) Then
                Return String.Empty
            Else
                Return MyBase.GetStringAsString(ColumnNames.IdUser)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.IdUser)
            Else
                Me.IdUser = MyBase.SetStringAsString(ColumnNames.IdUser, Value)
            End If
        End Set
    End Property

    Public Overridable Property s_IdEstAsigDoc() As String
        Get
            If Me.IsColumnNull(ColumnNames.IdEstAsigDoc) Then
                Return String.Empty
            Else
                Return MyBase.GetIntegerAsString(ColumnNames.IdEstAsigDoc)
            End If
        End Get
        Set(ByVal Value As String)
            If String.Empty = Value Then
                Me.SetColumnNull(ColumnNames.IdEstAsigDoc)
            Else
                Me.IdEstAsigDoc = MyBase.SetIntegerAsString(ColumnNames.IdEstAsigDoc, Value)
            End If
        End Set
    End Property

		Public Overridable Property s_Condicion As String
			Get
				If Me.IsColumnNull(ColumnNames.Condicion) Then
					Return String.Empty
				Else
					Return MyBase.GetstringAsString(ColumnNames.Condicion)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Condicion)
				Else
					Me.Condicion = MyBase.SetstringAsString(ColumnNames.Condicion, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_FechaRAsigna As String
			Get
				If Me.IsColumnNull(ColumnNames.FechaRAsigna) Then
					Return String.Empty
				Else
					Return MyBase.GetDateTimeAsString(ColumnNames.FechaRAsigna)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.FechaRAsigna)
				Else
					Me.FechaRAsigna = MyBase.SetDateTimeAsString(ColumnNames.FechaRAsigna, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_IdUserAsigna As String
			Get
				If Me.IsColumnNull(ColumnNames.IdUserAsigna) Then
					Return String.Empty
				Else
					Return MyBase.GetstringAsString(ColumnNames.IdUserAsigna)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.IdUserAsigna)
				Else
					Me.IdUserAsigna = MyBase.SetstringAsString(ColumnNames.IdUserAsigna, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_NombreCompleto As String
			Get
				If Me.IsColumnNull(ColumnNames.NombreCompleto) Then
					Return String.Empty
				Else
					Return MyBase.GetstringAsString(ColumnNames.NombreCompleto)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.NombreCompleto)
				Else
					Me.NombreCompleto = MyBase.SetstringAsString(ColumnNames.NombreCompleto, Value)
				End If
			End Set
		End Property

		Public Overridable Property s_Idcargo As String
			Get
				If Me.IsColumnNull(ColumnNames.Idcargo) Then
					Return String.Empty
				Else
					Return MyBase.GetstringAsString(ColumnNames.Idcargo)
				End If
			End Get
			Set(ByVal Value As String)
				If String.Empty = value Then
					Me.SetColumnNull(ColumnNames.Idcargo)
				Else
					Me.Idcargo = MyBase.SetstringAsString(ColumnNames.Idcargo, Value)
				End If
			End Set
		End Property


	#End Region 

	#Region "Where Clause"
    Public Class WhereClause

        Public Sub New(ByVal entity As BusinessEntity)
            Me._entity = entity
        End Sub
		
		Public ReadOnly Property TearOff As TearOffWhereParameter
			Get
				If _tearOff Is Nothing Then
					_tearOff = new TearOffWhereParameter(Me)
				End If

				Return _tearOff
			End Get
		End Property

		#Region "TearOff's"
		Public class TearOffWhereParameter

			Public Sub New(ByVal clause As WhereClause)
				Me._clause = clause
			End Sub
		
	
		Public ReadOnly Property IdDocInterno() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.IdDocInterno, Parameters.IdDocInterno)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property NroDoc() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.NroDoc, Parameters.NroDoc)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property IdTipoDocumento() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.IdTipoDocumento, Parameters.IdTipoDocumento)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property IdArea() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.IdArea, Parameters.IdArea)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property IdAgencia() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.IdAgencia, Parameters.IdAgencia)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Periodo() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.Periodo, Parameters.Periodo)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Asunto() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.Asunto, Parameters.Asunto)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Encabezado() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.Encabezado, Parameters.Encabezado)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Prioridad() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.Prioridad, Parameters.Prioridad)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property NombreArchivo() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.NombreArchivo, Parameters.NombreArchivo)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property RutaArchivo() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.RutaArchivo, Parameters.RutaArchivo)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property FechaR() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.FechaR, Parameters.FechaR)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property IdUserR() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.IdUserR, Parameters.IdUserR)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property IdEstDoc() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.IdEstDoc, Parameters.IdEstDoc)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property IdAsigDocInterno() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.IdAsigDocInterno, Parameters.IdAsigDocInterno)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property IdUser() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.IdUser, Parameters.IdUser)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property IdEstAsigDoc() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.IdEstAsigDoc, Parameters.IdEstAsigDoc)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Condicion() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.Condicion, Parameters.Condicion)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property FechaRAsigna() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.FechaRAsigna, Parameters.FechaRAsigna)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property IdUserAsigna() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.IdUserAsigna, Parameters.IdUserAsigna)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property NombreCompleto() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.NombreCompleto, Parameters.NombreCompleto)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Idcargo() As WhereParameter
			Get
				Dim where As WhereParameter = New WhereParameter(ColumnNames.Idcargo, Parameters.Idcargo)
				Me._clause._entity.Query.AddWhereParemeter(where)
				Return where
			End Get
		End Property


		Private _clause as WhereClause
	End Class
	#End Region	

		Public ReadOnly Property IdDocInterno() As WhereParameter 
			Get
				If _IdDocInterno_W Is Nothing Then
					_IdDocInterno_W = TearOff.IdDocInterno
				End If
				Return _IdDocInterno_W
			End Get
		End Property

		Public ReadOnly Property NroDoc() As WhereParameter 
			Get
				If _NroDoc_W Is Nothing Then
					_NroDoc_W = TearOff.NroDoc
				End If
				Return _NroDoc_W
			End Get
		End Property

		Public ReadOnly Property IdTipoDocumento() As WhereParameter 
			Get
				If _IdTipoDocumento_W Is Nothing Then
					_IdTipoDocumento_W = TearOff.IdTipoDocumento
				End If
				Return _IdTipoDocumento_W
			End Get
		End Property

		Public ReadOnly Property IdArea() As WhereParameter 
			Get
				If _IdArea_W Is Nothing Then
					_IdArea_W = TearOff.IdArea
				End If
				Return _IdArea_W
			End Get
		End Property

		Public ReadOnly Property IdAgencia() As WhereParameter 
			Get
				If _IdAgencia_W Is Nothing Then
					_IdAgencia_W = TearOff.IdAgencia
				End If
				Return _IdAgencia_W
			End Get
		End Property

		Public ReadOnly Property Periodo() As WhereParameter 
			Get
				If _Periodo_W Is Nothing Then
					_Periodo_W = TearOff.Periodo
				End If
				Return _Periodo_W
			End Get
		End Property

		Public ReadOnly Property Asunto() As WhereParameter 
			Get
				If _Asunto_W Is Nothing Then
					_Asunto_W = TearOff.Asunto
				End If
				Return _Asunto_W
			End Get
		End Property

		Public ReadOnly Property Encabezado() As WhereParameter 
			Get
				If _Encabezado_W Is Nothing Then
					_Encabezado_W = TearOff.Encabezado
				End If
				Return _Encabezado_W
			End Get
		End Property

		Public ReadOnly Property Prioridad() As WhereParameter 
			Get
				If _Prioridad_W Is Nothing Then
					_Prioridad_W = TearOff.Prioridad
				End If
				Return _Prioridad_W
			End Get
		End Property

		Public ReadOnly Property NombreArchivo() As WhereParameter 
			Get
				If _NombreArchivo_W Is Nothing Then
					_NombreArchivo_W = TearOff.NombreArchivo
				End If
				Return _NombreArchivo_W
			End Get
		End Property

		Public ReadOnly Property RutaArchivo() As WhereParameter 
			Get
				If _RutaArchivo_W Is Nothing Then
					_RutaArchivo_W = TearOff.RutaArchivo
				End If
				Return _RutaArchivo_W
			End Get
		End Property

		Public ReadOnly Property FechaR() As WhereParameter 
			Get
				If _FechaR_W Is Nothing Then
					_FechaR_W = TearOff.FechaR
				End If
				Return _FechaR_W
			End Get
		End Property

		Public ReadOnly Property IdUserR() As WhereParameter 
			Get
				If _IdUserR_W Is Nothing Then
					_IdUserR_W = TearOff.IdUserR
				End If
				Return _IdUserR_W
			End Get
		End Property

		Public ReadOnly Property IdEstDoc() As WhereParameter 
			Get
				If _IdEstDoc_W Is Nothing Then
					_IdEstDoc_W = TearOff.IdEstDoc
				End If
				Return _IdEstDoc_W
			End Get
		End Property

		Public ReadOnly Property IdAsigDocInterno() As WhereParameter 
			Get
				If _IdAsigDocInterno_W Is Nothing Then
					_IdAsigDocInterno_W = TearOff.IdAsigDocInterno
				End If
				Return _IdAsigDocInterno_W
			End Get
		End Property

		Public ReadOnly Property IdUser() As WhereParameter 
			Get
				If _IdUser_W Is Nothing Then
					_IdUser_W = TearOff.IdUser
				End If
				Return _IdUser_W
			End Get
		End Property

		Public ReadOnly Property IdEstAsigDoc() As WhereParameter 
			Get
				If _IdEstAsigDoc_W Is Nothing Then
					_IdEstAsigDoc_W = TearOff.IdEstAsigDoc
				End If
				Return _IdEstAsigDoc_W
			End Get
		End Property

		Public ReadOnly Property Condicion() As WhereParameter 
			Get
				If _Condicion_W Is Nothing Then
					_Condicion_W = TearOff.Condicion
				End If
				Return _Condicion_W
			End Get
		End Property

		Public ReadOnly Property FechaRAsigna() As WhereParameter 
			Get
				If _FechaRAsigna_W Is Nothing Then
					_FechaRAsigna_W = TearOff.FechaRAsigna
				End If
				Return _FechaRAsigna_W
			End Get
		End Property

		Public ReadOnly Property IdUserAsigna() As WhereParameter 
			Get
				If _IdUserAsigna_W Is Nothing Then
					_IdUserAsigna_W = TearOff.IdUserAsigna
				End If
				Return _IdUserAsigna_W
			End Get
		End Property

		Public ReadOnly Property NombreCompleto() As WhereParameter 
			Get
				If _NombreCompleto_W Is Nothing Then
					_NombreCompleto_W = TearOff.NombreCompleto
				End If
				Return _NombreCompleto_W
			End Get
		End Property

		Public ReadOnly Property Idcargo() As WhereParameter 
			Get
				If _Idcargo_W Is Nothing Then
					_Idcargo_W = TearOff.Idcargo
				End If
				Return _Idcargo_W
			End Get
		End Property

		Private _IdDocInterno_W As WhereParameter = Nothing
		Private _NroDoc_W As WhereParameter = Nothing
		Private _IdTipoDocumento_W As WhereParameter = Nothing
		Private _IdArea_W As WhereParameter = Nothing
		Private _IdAgencia_W As WhereParameter = Nothing
		Private _Periodo_W As WhereParameter = Nothing
		Private _Asunto_W As WhereParameter = Nothing
		Private _Encabezado_W As WhereParameter = Nothing
		Private _Prioridad_W As WhereParameter = Nothing
		Private _NombreArchivo_W As WhereParameter = Nothing
		Private _RutaArchivo_W As WhereParameter = Nothing
		Private _FechaR_W As WhereParameter = Nothing
		Private _IdUserR_W As WhereParameter = Nothing
		Private _IdEstDoc_W As WhereParameter = Nothing
		Private _IdAsigDocInterno_W As WhereParameter = Nothing
		Private _IdUser_W As WhereParameter = Nothing
		Private _IdEstAsigDoc_W As WhereParameter = Nothing
		Private _Condicion_W As WhereParameter = Nothing
		Private _FechaRAsigna_W As WhereParameter = Nothing
		Private _IdUserAsigna_W As WhereParameter = Nothing
		Private _NombreCompleto_W As WhereParameter = Nothing
		Private _Idcargo_W As WhereParameter = Nothing

		Public Sub WhereClauseReset()

		_IdDocInterno_W = Nothing
		_NroDoc_W = Nothing
		_IdTipoDocumento_W = Nothing
		_IdArea_W = Nothing
		_IdAgencia_W = Nothing
		_Periodo_W = Nothing
		_Asunto_W = Nothing
		_Encabezado_W = Nothing
		_Prioridad_W = Nothing
		_NombreArchivo_W = Nothing
		_RutaArchivo_W = Nothing
		_FechaR_W = Nothing
		_IdUserR_W = Nothing
		_IdEstDoc_W = Nothing
		_IdAsigDocInterno_W = Nothing
		_IdUser_W = Nothing
		_IdEstAsigDoc_W = Nothing
		_Condicion_W = Nothing
		_FechaRAsigna_W = Nothing
		_IdUserAsigna_W = Nothing
		_NombreCompleto_W = Nothing
		_Idcargo_W = Nothing
			Me._entity.Query.FlushWhereParameters()

		End Sub
	
		Private _entity As BusinessEntity
		Private _tearOff As TearOffWhereParameter
    End Class	

	Public ReadOnly Property Where() As WhereClause
		Get
			If _whereClause Is Nothing Then
				_whereClause = New WhereClause(Me)
			End If
	
			Return _whereClause
		End Get
	End Property
	
	Private _whereClause As WhereClause = Nothing	
#End Region	

#Region "Aggregate Clause"
    Public Class AggregateClause

        Public Sub New(ByVal entity As BusinessEntity)
            Me._entity = entity
        End Sub
		
		Public ReadOnly Property TearOff As TearOffAggregateParameter
			Get
				If _tearOff Is Nothing Then
					_tearOff = new TearOffAggregateParameter(Me)
				End If

				Return _tearOff
			End Get
		End Property

		#Region "AggregateParameter TearOff's"
		Public class TearOffAggregateParameter

			Public Sub New(ByVal clause As AggregateClause)
				Me._clause = clause
			End Sub
		
	
		Public ReadOnly Property IdDocInterno() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.IdDocInterno, Parameters.IdDocInterno)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property NroDoc() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.NroDoc, Parameters.NroDoc)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property IdTipoDocumento() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.IdTipoDocumento, Parameters.IdTipoDocumento)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property IdArea() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.IdArea, Parameters.IdArea)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property IdAgencia() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.IdAgencia, Parameters.IdAgencia)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Periodo() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Periodo, Parameters.Periodo)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Asunto() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Asunto, Parameters.Asunto)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Encabezado() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Encabezado, Parameters.Encabezado)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Prioridad() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Prioridad, Parameters.Prioridad)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property NombreArchivo() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.NombreArchivo, Parameters.NombreArchivo)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property RutaArchivo() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.RutaArchivo, Parameters.RutaArchivo)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property FechaR() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.FechaR, Parameters.FechaR)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property IdUserR() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.IdUserR, Parameters.IdUserR)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property IdEstDoc() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.IdEstDoc, Parameters.IdEstDoc)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property IdAsigDocInterno() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.IdAsigDocInterno, Parameters.IdAsigDocInterno)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property IdUser() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.IdUser, Parameters.IdUser)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property IdEstAsigDoc() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.IdEstAsigDoc, Parameters.IdEstAsigDoc)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Condicion() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Condicion, Parameters.Condicion)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property FechaRAsigna() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.FechaRAsigna, Parameters.FechaRAsigna)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property IdUserAsigna() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.IdUserAsigna, Parameters.IdUserAsigna)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property NombreCompleto() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.NombreCompleto, Parameters.NombreCompleto)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property

		Public ReadOnly Property Idcargo() As AggregateParameter
			Get
				Dim where As AggregateParameter = New AggregateParameter(ColumnNames.Idcargo, Parameters.Idcargo)
				Me._clause._entity.Query.AddAggregateParameter(where)
				Return where
			End Get
		End Property


			Private _clause as AggregateClause
		End Class
		#End Region	

		Public ReadOnly Property IdDocInterno() As AggregateParameter 
			Get
				If _IdDocInterno_W Is Nothing Then
					_IdDocInterno_W = TearOff.IdDocInterno
				End If
				Return _IdDocInterno_W
			End Get
		End Property

		Public ReadOnly Property NroDoc() As AggregateParameter 
			Get
				If _NroDoc_W Is Nothing Then
					_NroDoc_W = TearOff.NroDoc
				End If
				Return _NroDoc_W
			End Get
		End Property

		Public ReadOnly Property IdTipoDocumento() As AggregateParameter 
			Get
				If _IdTipoDocumento_W Is Nothing Then
					_IdTipoDocumento_W = TearOff.IdTipoDocumento
				End If
				Return _IdTipoDocumento_W
			End Get
		End Property

		Public ReadOnly Property IdArea() As AggregateParameter 
			Get
				If _IdArea_W Is Nothing Then
					_IdArea_W = TearOff.IdArea
				End If
				Return _IdArea_W
			End Get
		End Property

		Public ReadOnly Property IdAgencia() As AggregateParameter 
			Get
				If _IdAgencia_W Is Nothing Then
					_IdAgencia_W = TearOff.IdAgencia
				End If
				Return _IdAgencia_W
			End Get
		End Property

		Public ReadOnly Property Periodo() As AggregateParameter 
			Get
				If _Periodo_W Is Nothing Then
					_Periodo_W = TearOff.Periodo
				End If
				Return _Periodo_W
			End Get
		End Property

		Public ReadOnly Property Asunto() As AggregateParameter 
			Get
				If _Asunto_W Is Nothing Then
					_Asunto_W = TearOff.Asunto
				End If
				Return _Asunto_W
			End Get
		End Property

		Public ReadOnly Property Encabezado() As AggregateParameter 
			Get
				If _Encabezado_W Is Nothing Then
					_Encabezado_W = TearOff.Encabezado
				End If
				Return _Encabezado_W
			End Get
		End Property

		Public ReadOnly Property Prioridad() As AggregateParameter 
			Get
				If _Prioridad_W Is Nothing Then
					_Prioridad_W = TearOff.Prioridad
				End If
				Return _Prioridad_W
			End Get
		End Property

		Public ReadOnly Property NombreArchivo() As AggregateParameter 
			Get
				If _NombreArchivo_W Is Nothing Then
					_NombreArchivo_W = TearOff.NombreArchivo
				End If
				Return _NombreArchivo_W
			End Get
		End Property

		Public ReadOnly Property RutaArchivo() As AggregateParameter 
			Get
				If _RutaArchivo_W Is Nothing Then
					_RutaArchivo_W = TearOff.RutaArchivo
				End If
				Return _RutaArchivo_W
			End Get
		End Property

		Public ReadOnly Property FechaR() As AggregateParameter 
			Get
				If _FechaR_W Is Nothing Then
					_FechaR_W = TearOff.FechaR
				End If
				Return _FechaR_W
			End Get
		End Property

		Public ReadOnly Property IdUserR() As AggregateParameter 
			Get
				If _IdUserR_W Is Nothing Then
					_IdUserR_W = TearOff.IdUserR
				End If
				Return _IdUserR_W
			End Get
		End Property

		Public ReadOnly Property IdEstDoc() As AggregateParameter 
			Get
				If _IdEstDoc_W Is Nothing Then
					_IdEstDoc_W = TearOff.IdEstDoc
				End If
				Return _IdEstDoc_W
			End Get
		End Property

		Public ReadOnly Property IdAsigDocInterno() As AggregateParameter 
			Get
				If _IdAsigDocInterno_W Is Nothing Then
					_IdAsigDocInterno_W = TearOff.IdAsigDocInterno
				End If
				Return _IdAsigDocInterno_W
			End Get
		End Property

		Public ReadOnly Property IdUser() As AggregateParameter 
			Get
				If _IdUser_W Is Nothing Then
					_IdUser_W = TearOff.IdUser
				End If
				Return _IdUser_W
			End Get
		End Property

		Public ReadOnly Property IdEstAsigDoc() As AggregateParameter 
			Get
				If _IdEstAsigDoc_W Is Nothing Then
					_IdEstAsigDoc_W = TearOff.IdEstAsigDoc
				End If
				Return _IdEstAsigDoc_W
			End Get
		End Property

		Public ReadOnly Property Condicion() As AggregateParameter 
			Get
				If _Condicion_W Is Nothing Then
					_Condicion_W = TearOff.Condicion
				End If
				Return _Condicion_W
			End Get
		End Property

		Public ReadOnly Property FechaRAsigna() As AggregateParameter 
			Get
				If _FechaRAsigna_W Is Nothing Then
					_FechaRAsigna_W = TearOff.FechaRAsigna
				End If
				Return _FechaRAsigna_W
			End Get
		End Property

		Public ReadOnly Property IdUserAsigna() As AggregateParameter 
			Get
				If _IdUserAsigna_W Is Nothing Then
					_IdUserAsigna_W = TearOff.IdUserAsigna
				End If
				Return _IdUserAsigna_W
			End Get
		End Property

		Public ReadOnly Property NombreCompleto() As AggregateParameter 
			Get
				If _NombreCompleto_W Is Nothing Then
					_NombreCompleto_W = TearOff.NombreCompleto
				End If
				Return _NombreCompleto_W
			End Get
		End Property

		Public ReadOnly Property Idcargo() As AggregateParameter 
			Get
				If _Idcargo_W Is Nothing Then
					_Idcargo_W = TearOff.Idcargo
				End If
				Return _Idcargo_W
			End Get
		End Property

		Private _IdDocInterno_W As AggregateParameter = Nothing
		Private _NroDoc_W As AggregateParameter = Nothing
		Private _IdTipoDocumento_W As AggregateParameter = Nothing
		Private _IdArea_W As AggregateParameter = Nothing
		Private _IdAgencia_W As AggregateParameter = Nothing
		Private _Periodo_W As AggregateParameter = Nothing
		Private _Asunto_W As AggregateParameter = Nothing
		Private _Encabezado_W As AggregateParameter = Nothing
		Private _Prioridad_W As AggregateParameter = Nothing
		Private _NombreArchivo_W As AggregateParameter = Nothing
		Private _RutaArchivo_W As AggregateParameter = Nothing
		Private _FechaR_W As AggregateParameter = Nothing
		Private _IdUserR_W As AggregateParameter = Nothing
		Private _IdEstDoc_W As AggregateParameter = Nothing
		Private _IdAsigDocInterno_W As AggregateParameter = Nothing
		Private _IdUser_W As AggregateParameter = Nothing
		Private _IdEstAsigDoc_W As AggregateParameter = Nothing
		Private _Condicion_W As AggregateParameter = Nothing
		Private _FechaRAsigna_W As AggregateParameter = Nothing
		Private _IdUserAsigna_W As AggregateParameter = Nothing
		Private _NombreCompleto_W As AggregateParameter = Nothing
		Private _Idcargo_W As AggregateParameter = Nothing

		Public Sub AggregateClauseReset()

		_IdDocInterno_W = Nothing
		_NroDoc_W = Nothing
		_IdTipoDocumento_W = Nothing
		_IdArea_W = Nothing
		_IdAgencia_W = Nothing
		_Periodo_W = Nothing
		_Asunto_W = Nothing
		_Encabezado_W = Nothing
		_Prioridad_W = Nothing
		_NombreArchivo_W = Nothing
		_RutaArchivo_W = Nothing
		_FechaR_W = Nothing
		_IdUserR_W = Nothing
		_IdEstDoc_W = Nothing
		_IdAsigDocInterno_W = Nothing
		_IdUser_W = Nothing
		_IdEstAsigDoc_W = Nothing
		_Condicion_W = Nothing
		_FechaRAsigna_W = Nothing
		_IdUserAsigna_W = Nothing
		_NombreCompleto_W = Nothing
		_Idcargo_W = Nothing
			Me._entity.Query.FlushAggregateParameters()

		End Sub
	
		Private _entity As BusinessEntity
		Private _tearOff As TearOffAggregateParameter
    End Class	

	Public ReadOnly Property Aggregate() As AggregateClause
		Get
			If _aggregateClause Is Nothing Then
				_aggregateClause = New AggregateClause(Me)
			End If
	
			Return _aggregateClause
		End Get
	End Property
	
	Private _aggregateClause As AggregateClause = Nothing	
#End Region	

	Protected Overrides Function GetInsertCommand() As IDbCommand
		Return Nothing
	End Function
	
	Protected Overrides Function GetUpdateCommand() As IDbCommand
		Return Nothing
	End Function
	
	Protected Overrides Function GetDeleteCommand() As IDbCommand
		Return Nothing
    End Function
    Public Function obtBuzonxUsuario(ByVal sIdUser As String) As DataTable
        Try
            Where.IdUser.Value = sIdUser
            Where.IdUser.Operator = WhereParameter.Operand.Equal

            If Query.Load Then
                Return DataTable
            Else
                Return Nothing
            End If
        Catch ex As Exception
            Throw ex
        End Try

    End Function

    Public Function obtBuzonxtipodoc(ByVal sIdUser As String, ByVal sIdTipDoc As Integer) As DataTable
        Try
            Where.IdUser.Value = sIdUser
            Where.IdUser.Operator = WhereParameter.Operand.Equal

            Where.IdTipoDocumento.Value = sIdTipDoc
            Where.IdTipoDocumento.Operator = WhereParameter.Operand.Equal

            If Query.Load Then
                Return DataTable
            Else
                Return Nothing
            End If
        Catch ex As Exception
            Throw ex
        End Try

    End Function
    Public Function obtBuzonxArea(ByVal sIdUser As String, ByVal sIdArea As Integer) As DataTable
        Try
            Where.IdUser.Value = sIdUser
            Where.IdUser.Operator = WhereParameter.Operand.Equal

            Where.IdArea.Value = sIdArea
            Where.IdArea.Operator = WhereParameter.Operand.Equal

            If Query.Load Then
                Return DataTable
            Else
                Return Nothing
            End If
        Catch ex As Exception
            Throw ex
        End Try

    End Function
    Public Function obtBuzonxCargo(ByVal sIdUser As String, ByVal sIdCargo As Integer) As DataTable
        Try
            Where.IdUser.Value = sIdUser
            Where.IdUser.Operator = WhereParameter.Operand.Equal

            Where.Idcargo.Value = sIdCargo
            Where.Idcargo.Operator = WhereParameter.Operand.Equal

            If Query.Load Then
                Return DataTable
            Else
                Return Nothing
            End If
        Catch ex As Exception
            Throw ex
        End Try
    End Function
    Public Function obtBuzonxPrioridad(ByVal sIdUser As String, ByVal sPrioridad As Integer) As DataTable
        Try
            Where.IdUser.Value = sIdUser
            Where.IdUser.Operator = WhereParameter.Operand.Equal

            Where.Prioridad.Value = sPrioridad
            Where.Prioridad.Operator = WhereParameter.Operand.Equal

            If Query.Load Then
                Return DataTable
            Else
                Return Nothing
            End If
        Catch ex As Exception
            Throw ex
        End Try
    End Function
End Class

