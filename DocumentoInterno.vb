Imports CapaAccesoDatos
Imports MyGeneration.dOOdads
' Generated by MyGeneration Version # (1.3.0.3)

Public Class DocumentoInterno 
    Inherits _DocumentoInterno
    Private AsignacionDocInt As New CapaLogicaNegocio.AsignaDocInterno
    Private nIdInsertado As Integer
    Private sNrodoc As String
    Private sIdTipDocumento As Integer
    Private sIdArea As String
    Private sIdAgencia As String
    Private sPeriodo As String
    Private sAsunto As String
    Private sEncabezado As String
    Private sPrioridad As String
    Private sFechaR As String
    Private sIdUserR As String
    'Private AsiDocInt_IdUser As String
    ''Private AsiDocInt_IdDocInterno	4	int
    'Private AsiDocInt_IdEstAsigDoc As Integer
    'Private AsiDocInt_Condicion As String
    'Public Property pAsiDocInt_Condicion() As String
    '    Get
    '        Return AsiDocInt_Condicion
    '    End Get
    '    Set(ByVal value As String)
    '        AsiDocInt_Condicion = value
    '    End Set
    'End Property
    'Public Property pAsiDocInt_IdEstAsigDoc() As Integer
    '    Get
    '        Return AsiDocInt_IdEstAsigDoc
    '    End Get
    '    Set(ByVal value As Integer)
    '        AsiDocInt_IdEstAsigDoc = value
    '    End Set
    'End Property
    'Public Property pAsiDocInt_IdUser() As String
    '    Get
    '        Return AsiDocInt_IdUser
    '    End Get
    '    Set(ByVal value As String)
    '        AsiDocInt_IdUser = value
    '    End Set
    'End Property

    Private sIdEstDoc As Integer
    Public Property pIdestDoc() As Integer
        Get
            Return sIdEstDoc
        End Get
        Set(ByVal value As Integer)
            sIdEstDoc = value
        End Set
    End Property

    Public Property pIdUserR() As String
        Get
            Return sIdUserR
        End Get
        Set(ByVal value As String)
            sIdUserR = value
        End Set
    End Property
    Public Property pFechaR() As String
        Get
            Return sFechaR
        End Get
        Set(ByVal value As String)
            sFechaR = value
        End Set
    End Property
    Public Property pPrioridad() As String
        Get
            Return sPrioridad
        End Get
        Set(ByVal value As String)
            sPrioridad = value
        End Set
    End Property
    Public Property pEncabezado() As String
        Get
            Return sEncabezado
        End Get
        Set(ByVal value As String)
            sEncabezado = value
        End Set
    End Property
    Public Property pAsunto() As String
        Get
            Return sAsunto
        End Get
        Set(ByVal value As String)
            sAsunto = value
        End Set
    End Property
    Public Property pPeriodo() As String
        Get
            Return sPeriodo
        End Get
        Set(ByVal value As String)
            sPeriodo = value
        End Set
    End Property
    Public Property pIdAgencia() As String
        Get
            Return sIdAgencia
        End Get
        Set(ByVal value As String)
            sIdAgencia = value
        End Set
    End Property
    Public Property pIdArea() As String
        Get
            Return sIdArea
        End Get
        Set(ByVal value As String)
            sIdArea = value
        End Set
    End Property
    Public Property pIdTipDocumento() As Integer
        Get
            Return sIdTipDocumento
        End Get
        Set(ByVal value As Integer)
            sIdTipDocumento = value
        End Set
    End Property
    Public Property pNroDocu() As String
        Get
            Return sNrodoc
        End Get
        Set(ByVal value As String)
            sNrodoc = value
        End Set
    End Property
    Public Property IdInsertado() As Integer
        Get
            Return nIdInsertado
        End Get
        Set(ByVal value As Integer)
            nIdInsertado = value
        End Set
    End Property


    Public Sub EC_insertaDocInt(ByVal bAsigna As Boolean)
        Dim tx As TransactionMgr
        tx = TransactionMgr.ThreadTransactionMgr()
        Try
            tx.BeginTransaction()
            AddNew()
            IdTipoDocumento = sIdTipDocumento
            NroDoc = sNrodoc
            IdArea = sIdArea
            IdAgencia = sIdAgencia
            Periodo = sPeriodo
            Asunto = sAsunto
            Encabezado = sEncabezado
            Prioridad = sPrioridad
            FechaR = CType(sFechaR, Date)
            IdUserR = sIdUserR
            IdEstDoc = sIdEstDoc
            Save()
            nIdInsertado = Me.IdDocInterno
            'If bAsigna Then
            '    With AsignacionDocInt
            '        .AddNew()
            '        .IdUser = AsiDocInt_IdUser
            '        .IdDocInterno = Me.IdDocInterno
            '        .IdEstAsigDoc = AsiDocInt_IdEstAsigDoc
            '        .Condicion = AsiDocInt_Condicion
            '        .IdUserR = sIdUserR
            '        .FechaR = CType(sFechaR, Date)
            '        .Save()
            '    End With
            'End If
            tx.CommitTransaction()
        Catch ex As Exception
            Throw ex
        End Try
    End Sub
    Public Function obtieneDocumentoInterno(ByVal sIdDocInterno As Integer) As Boolean
        Try
            If Me.LoadByPrimaryKey(sIdDocInterno) Then
                pPrioridad = Prioridad
                pNroDocu = NroDoc
                pIdUserR = IdUserR
                pIdTipDocumento = IdTipoDocumento
                pIdestDoc = IdEstDoc
                pIdArea = IdArea
                pIdAgencia = IdAgencia
                pFechaR = FechaR
                pEncabezado = Encabezado
                pAsunto = Asunto
                Return True
            Else
                Return False
            End If
        Catch ex As Exception
            Throw ex
        End Try

    End Function
    Sub cambiaestado(ByVal nIdDocinterno As Integer, ByVal nEstado As Integer)
        Dim tx As TransactionMgr
        tx = TransactionMgr.ThreadTransactionMgr
        Try
            tx.BeginTransaction()
            If LoadByPrimaryKey(nIdDocinterno) Then
                IdEstDoc = nEstado
                Save()
            End If
            tx.CommitTransaction()
        Catch ex As Exception
            tx.RollbackTransaction()
            TransactionMgr.ThreadTransactionMgrReset()
            Throw ex
        End Try
    End Sub

End Class
